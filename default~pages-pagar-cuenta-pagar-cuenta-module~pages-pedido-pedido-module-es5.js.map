{"version":3,"sources":["./src/app/shared/services/estado-pedido-cliente.service.ts","./src/app/shared/services/registrar-pago.service.ts"],"names":[],"mappings":"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","file":"default~pages-pagar-cuenta-pagar-cuenta-module~pages-pedido-pedido-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { EstadoPedidoModel } from 'src/app/modelos/estado.pedido.model';\nimport { ListenStatusService } from './listen-status.service';\nimport { CrudHttpService } from './crud-http.service';\nimport { InfoTockenService } from './info-token.service';\nimport { JsonpInterceptor } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { timeInterval, timeout } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EstadoPedidoClienteService {\n  estadoPedido = new EstadoPedidoModel();\n\n  private keyStorage = 'sys::status';\n  private timeInterval = null;\n  private timeNow = new Date();\n  private hayPedidoPendiente = false;\n\n  private timeRestanteAproxSource = new BehaviorSubject<number>(0);\n  public timeRestanteAprox$ = this.timeRestanteAproxSource.asObservable();\n\n  private hayCuentaClienteSource = new BehaviorSubject<any>(null);\n  public hayCuentaCliente$ = this.hayCuentaClienteSource.asObservable();\n\n  private dataPost: any;\n\n  constructor(\n    private listenStatusService: ListenStatusService,\n    private crudService: CrudHttpService,\n    private infoTokenService: InfoTockenService\n  ) {\n\n    this.deserializar();\n\n    this.dataPost = {\n      idsede: this.infoTokenService.getInfoUs().idsede,\n      idcliente: this.infoTokenService.getInfoUs().idcliente\n    };\n\n    // this.listenStatusService.hayPedidoPendiente$.subscribe((res: boolean) => {\n    //   console.log('======== listen setHayPedidoPendiente', res);\n    //   this.setHayPedidoPendiente(res);\n    // });\n  }\n\n  private deserializar(): void {\n    let _data = localStorage.getItem(this.keyStorage);\n    _data = _data === '{}' || '' ? null : _data;\n    if ( _data ) {\n      this.estadoPedido = JSON.parse(_data);\n    } else {\n      this.estadoPedido = new EstadoPedidoModel();\n    }\n\n  }\n\n  get() {\n    // const _data = localStorage.getItem(this.keyStorage);\n    this.deserializar();\n    // if ( !this.estadoPedido ) {\n      // verificar en la bd si tiene pedido sin pagar\n      this.getCuentaTotales();\n\n    //  }\n  }\n\n  // solo para estado pedido al momento de hacer clic en ver cuenta se mostrara la cuenta getCuenta()\n  getCuentaTotales(): number {\n\n    let importeCuenta = 0;\n    this.crudService.postFree(this.dataPost, 'pedido', 'lacuenta-cliente-totales', false).subscribe( (res: any) => {\n      if ( res.data.length === 0 ) { this.estadoPedido.hayPedidoCliente = false; return; } // si no hay cuenta pedido del cliente\n      importeCuenta = res.data[0].importe || 0;\n      this.setImporte(importeCuenta);\n\n      this.estadoPedido.hayPedidoCliente = true;\n      this.calcTimeAprox(); // calcula el tiempo aproximado\n\n      // this.setisPagada(importeCuenta === 0 ? true : false);\n      // if (this.hayPedidoFromStorage) {\n        // notificar pedido pediente por finalizar\n        // return;\n      // }\n      // console.log('cuenta cliente totales', res);\n\n\n\n      // la cuenta\n      // this.hayCuentaClienteSource.next(res);\n      this.notifyChange();\n      // return res;\n    });\n\n    return importeCuenta;\n  }\n\n  getCuenta(): any {\n\n    this.crudService.postFree(this.dataPost, 'pedido', 'lacuenta-cliente', false).subscribe( (res: any) => {\n      if ( res.data.length === 0 ) { this.estadoPedido.hayPedidoCliente = false; return; } // si no hay cuenta pedido del cliente\n\n      this.estadoPedido.hayPedidoCliente = true;\n      this.calcTimeAprox(); // calcula el tiempo aproximado\n      // console.log('cuenta cliente', res);\n\n\n      // la cuenta\n      this.hayCuentaClienteSource.next(res);\n      this.notifyChange();\n      return res;\n    });\n  }\n\n  getImporteCuenta() {\n    return new Promise(resolve => {\n      this.crudService.postFree(this.dataPost, 'pedido', 'lacuenta-cliente-totales', false).subscribe( (res: any) => {\n        const _rpt = res.success ? res.data[0].importe : 0;\n        resolve(_rpt);\n      });\n    });\n  }\n\n  getObj(): EstadoPedidoModel {\n    // const _data = localStorage.getItem(this.keyStorage);\n    // this.estadoPedido = _data;\n    if ( !this.estadoPedido ) {\n      this.deserializar();\n    }\n\n    return this.estadoPedido;\n  }\n\n  setEstado(val: number): void {\n    this.deserializar();\n    this.estadoPedido.estado = val;\n    this.notifyChange();\n  }\n\n  setImporte(val: number): void {\n    this.deserializar();\n    this.estadoPedido.importe = val;\n    this.notifyChange();\n  }\n\n  setHoraInitPedido(val: number): void {\n    this.deserializar();\n    this.estadoPedido.horaInt = val;\n    this.notifyChange();\n  }\n\n  setTimeAprox(val: boolean): void {\n    this.deserializar();\n    this.estadoPedido.isTiempoAproxCumplido = val;\n    this.notifyChange();\n  }\n\n  setHayPedidoPendiente(val: boolean): void {\n    this.deserializar();\n    this.estadoPedido.hayPedidoClientePendiente = val;\n    this.notifyChange();\n  }\n\n  setisPagada(val: boolean): void {\n    this.deserializar();\n    this.estadoPedido.isPagada = val;\n    this.notifyChange();\n  }\n\n  setisRegisterPago(val: boolean): void {\n    this.deserializar();\n    this.estadoPedido.isRegisterOnePago = val;\n    this.notifyChange();\n  }\n\n  // obtener el tiempo aproximado del pedido\n  calcTimeAprox(): void {\n    this.crudService.postFree(this.dataPost, 'pedido', 'calc-time-despacho', false).subscribe( (res: any) => {\n      // console.log('calc time despacho', res);\n      this.estadoPedido.estado = 0; // en espera\n      this.estadoPedido.numMinAprox = res.data[0].rpt;\n      // this.estadoPedido.horaInt = this.timeNow.getTime();\n      this.estadoPedido.isTiempoAproxCumplido = false;\n      this.notifyChange();\n\n      // console.log('this.estadoPedido', this.estadoPedido);\n      this.getTimeAprox();\n    });\n  }\n\n  // calcula el tiempo\n  getTimeAprox(): number {\n    const rpt = 0;\n    if ( this.estadoPedido.estado === 0 ) {\n      // this.timeInterval = setInterval(this.calTimeMin, 4000);\n      this.timeInterval = setTimeout(() => {\n        let min = this.calTimeMin();\n        if ( min <= 0 ) {\n          this.estadoPedido.estado = 1;\n          this.notifyChange();\n          this.clearTimeout();\n          clearTimeout(this.timeInterval);\n          min = 0;\n        } else {\n          this.getTimeAprox();\n        }\n\n        this.timeRestanteAproxSource.next(min);\n      }, 2000);\n    } else {\n      this.clearTimeout();\n    }\n\n    return rpt;\n  }\n\n  private calTimeMin(): number {\n    let timeMin = new Date().getTime() - this.estadoPedido.horaInt;\n    timeMin = Math.round(((timeMin % 86400000) % 3600000) / 60000);\n    timeMin = this.estadoPedido.numMinAprox - timeMin;\n\n    // let min = this.calTimeMin();\n        // if ( timeMin <= 0 ) {\n        //   this.estadoPedido.estado = 1;\n        //   this.notifyChange();\n        //   this.clearTimeout();\n        //   timeMin = 0;\n        // }\n\n        // this.timeRestanteAproxSource.next(timeMin);\n\n    return  isNaN(timeMin) ? 0 : timeMin;\n  }\n\n  private clearTimeout(): void {\n    // if (this.timeInterval) {\n      clearTimeout(this.timeInterval);\n      this.timeInterval = null;\n    // }\n  }\n\n  private notifyChange(): void {\n    this.listenStatusService.setEstadoPedido(this.estadoPedido);\n\n    localStorage.setItem(this.keyStorage, JSON.stringify(this.estadoPedido));\n\n    // calcula el tiempo de espera aproximadamente\n    // this.getTimeAprox();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InfoTockenService } from './info-token.service';\nimport { UsuarioTokenModel } from 'src/app/modelos/usuario.token.model';\nimport { CrudHttpService } from './crud-http.service';\nimport { SocketService } from './socket.service';\nimport { ClientePagoModel } from 'src/app/modelos/cliente.pago.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrarPagoService {\n\n  private infoToken: UsuarioTokenModel;\n  private objTotales: any;\n  private responseTransaction: any;\n\n  constructor(\n    private infoTokenService: InfoTockenService,\n    private crudService: CrudHttpService,\n    private socketService: SocketService,\n  ) {\n    this.infoToken = this.infoTokenService.getInfoUs();\n  }\n\n  private getSubtotales(): void {\n    this.objTotales = JSON.parse(atob(localStorage.getItem('sys::st')));\n  }\n\n  registrarPago(_importe: string, _dataTransactionRegister: any, dataClientePago: ClientePagoModel, isDelivery: boolean = false): void {\n    this.getSubtotales();\n\n    const _objOperacion = {\n      idcliente: this.infoToken.idcliente,\n      idorg: this.infoToken.idorg,\n      idsede: this.infoToken.idsede,\n      mesa: this.infoToken.numMesaLector,\n      importe: _importe\n    };\n\n    const _data = {\n      idcliente: _objOperacion.idcliente,\n      idorg: _objOperacion.idorg,\n      idsede: _objOperacion.idsede,\n      mesa: _objOperacion.mesa,\n      importe: _objOperacion.importe,\n      isdelivery: isDelivery,\n      objSubTotal: this.objTotales,\n      objTransaction: _dataTransactionRegister,\n      objCliente: dataClientePago,\n      objOperacion: _objOperacion\n    };\n\n    this.crudService.postFree(_data, 'transaction', 'registrar-pago', false).subscribe((res: any) => {\n      // console.log('registro-pago', res);\n      // if ( res.success ) {\n        this.setIdRegistroPagoTransaction(res.data[0].idregistro_pago);\n        this.socketService.emit('notificar-pago-pwa', _data);\n      // }\n    });\n\n\n  }\n\n  getIpClient(): string {\n    let _res = '';\n    this.crudService.getFree('https://api.ipify.org?format=jsonp&callback=?').subscribe((res: any) => {\n      _res = res.ip;\n    });\n\n    return _res;\n  }\n\n\n  // manejo de respuesta en local storage\n  getDataTrasaction(): any {\n    // toma la respuesta de pago\n    // this.responseTransaction = JSON.parse(localStorage.getItem('sys::transaction-response'));\n    this.loadDataTransaction();\n    const resPagoIsSucces = this.responseTransaction ? !this.responseTransaction.error : false;\n    this.responseTransaction.isSuccess = !resPagoIsSucces;\n\n\n    return this.responseTransaction;\n  }\n\n  private setIdRegistroPagoTransaction(id: number): void {\n    this.loadDataTransaction();\n    this.responseTransaction.idregistro_pago = id;\n    this.upDataTransaction();\n  }\n\n  private loadDataTransaction(): void {\n    // toma la respuesta de pago\n    this.responseTransaction = JSON.parse(localStorage.getItem('sys::transaction-response'));\n  }\n\n  private upDataTransaction(): void {\n    localStorage.setItem('sys::transaction-response', JSON.stringify(this.responseTransaction));\n  }\n\n  removeLocalDataTransaction(): void {\n    localStorage.removeItem('sys::transaction-response');\n    this.responseTransaction = null;\n  }\n}\n"],"sourceRoot":""}