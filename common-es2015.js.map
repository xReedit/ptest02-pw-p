{"version":3,"sources":["./src/app/componentes/dialog-desicion/dialog-desicion.component.html","./src/app/componentes/dialog-desicion/dialog-desicion.component.css","./src/app/componentes/dialog-desicion/dialog-desicion.component.ts","./src/app/shared/services/notificacion-push.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,wHAAyD,KAAK,uHAAuH,iBAAiB,wFAAwF,gBAAgB,0CAA0C,E;;;;;;;;;;;;ACAvW;AAAe,6GAA8C,mLAAmL,E;;;;;;;;;;;;;;;;;;ACAtL;AACe;IAO5D,uBAAuB,SAAvB,uBAAuB;IAIlC,YACU,SAAgD,EAC/B,IAAS;QAD1B,cAAS,GAAT,SAAS,CAAuC;QAJ1D,QAAG,GAAG,EAAE,CAAC;QACT,mBAAc,GAAG,IAAI,CAAC;QACtB,oBAAe,GAAG,eAAe,CAAC;QAKhC,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACpC,QAAQ,KAAK,EAAE;YACb,KAAK,CAAC;gBACJ,IAAI,CAAC,GAAG,GAAG,wDAAwD,CAAC;gBACpE,MAAM;YACR,KAAK,CAAC;gBACJ,IAAI,CAAC,GAAG,GAAG,kDAAkD,CAAC;gBAC9D,MAAM;SACT;IACH,CAAC;IAED,QAAQ;IACR,CAAC;IAGD,SAAS,CAAC,KAAc;QACtB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;CAEF;;YAlCyB,qEAAY;4CAajC,oDAAM,SAAC,wEAAe;;AANd,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,qQAA+C;;KAEhD,CAAC;mFAMqB,qEAAY;GALtB,uBAAuB,CA2BnC;AA3BmC;;;;;;;;;;;;;;;;;;;;;;ACRO;AACM;AACK;AACG;AACH;AACtD,yDAAyD;AACzD,yEAAyE;AACzE,2GAA2G;IAK9F,uBAAuB,SAAvB,uBAAuB;IAElC,oHAAoH;IAEpH,YACU,MAAc,EACd,WAA4B,EAC5B,gBAAmC;QAI3C,uBAAuB;QANf,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAiB;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAmB;QAM3C,uDAAuD;QACvD,sDAAsD;QACtD,6CAA6C;QAC7C,gCAAgC;QAChC,MAAM;QAEN,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAE,KAAK,CAAC,EAAE;YAChD,KAAK,CAAC,aAAa,CAAC,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;YACxC,2CAA2C;YAC3C,4BAA4B;YAC5B,wCAAwC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,OAAO,YAAY,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAC9D,CAAC;IAGD,gCAAgC;IAChC,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,oDAAoD,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACzF,iCAAiC;QAC/B,8CAA8C;QAC5C,uBAAuB;QACvB,8CAA8C;QAC9C,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,MAAM;QACR,IAAI;IACN,CAAC;IAED,eAAe;IACP,cAAc;QACpB,iCAAiC;QACjC,IAAI,CAAC,MAAM;aACV,mBAAmB,CAAC;YACnB,eAAe,EAAE,iEAAY;SAC9B,CAAC;aACD,IAAI,CAAC,YAAY,CAAC,EAAE;YACnB,kCAAkC;YAClC,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,YAAY,CAAC,CAAC;YAC5D,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QACrC,CAAC,CAAC;aACD,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAEO,eAAe,CAAC,aAAkB;QACxC,MAAM,KAAK,GAAG;YACZ,WAAW,EAAE,aAAa;YAC1B,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,SAAS;SACvD,CAAC;QAEF,8BAA8B;QAE9B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,aAAa,EAAE,KAAK,CAAC;aAC3D,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC,CAAC;CA+CF;;YAhIQ,8DAAM;YACN,kEAAe;YACf,qEAAiB;;AASb,uBAAuB;IAHnC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAMkB,8DAAM;QACD,kEAAe;QACV,qEAAiB;GAPlC,uBAAuB,CAqHnC;AArHmC","file":"common-es2015.js","sourcesContent":["export default \"<div class=\\\"p-3\\\">\\n    <span class=\\\"fw-100 fs-15\\\">{{msj}}</span>\\n    <hr>\\n    <div class=\\\"d-flex\\\">\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"cerrarDlg(true)\\\">{{titleBtnSuccess}}</button>\\n        <button class=\\\"ml-2 btn btn-danger\\\" (click)=\\\"cerrarDlg(false)\\\">{{titleBtnCancel}}</button>\\n    </div>\\n    <br>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL2RpYWxvZy1kZXNpY2lvbi9kaWFsb2ctZGVzaWNpb24uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog-desicion',\n  templateUrl: './dialog-desicion.component.html',\n  styleUrls: ['./dialog-desicion.component.css']\n})\nexport class DialogDesicionComponent implements OnInit {\n  msj = '';\n  titleBtnCancel = 'No';\n  titleBtnSuccess = 'Si, por favor';\n  constructor(\n    private dialogRef: MatDialogRef<DialogDesicionComponent>,\n    @Inject(MAT_DIALOG_DATA) data: any,\n  ) {\n    const idMsj = data ? data.idMjs : 0;\n    switch (idMsj) {\n      case 0:\n        this.msj = 'Desea que se le notifique cuando su pedido este listo?';\n        break;\n      case 1:\n        this.msj = 'Desea saber cuando tenga descuentos y/o ofertas?';\n        break;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n\n  cerrarDlg(value: boolean): void {\n    this.dialogRef.close(value);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { SwPush } from '@angular/service-worker';\nimport { CrudHttpService } from './crud-http.service';\nimport { InfoTockenService } from './info-token.service';\nimport { VAPID_PUBLIC } from '../config/config.const';\n// import { Observable } from 'rxjs/internal/Observable';\n// import { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n// import { DialogDesicionComponent } from 'src/app/componentes/dialog-desicion/dialog-desicion.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificacionPushService {\n\n  // private VAPID_PUBLIC = 'BC7ietauZE99Hx9HkPyuGVr8jaYETyEJgH-gLaYIsbORYobppt9dX49_K_wubDqphu1afi7XrM6x1zAp4kJh_wU';\n\n  constructor(\n    private swPush: SwPush,\n    private crudService: CrudHttpService,\n    private infoTokenService: InfoTockenService,\n    // private dialog: MatDialog,\n  ) {\n\n    // this.showMessages();\n\n    // this.swPush.notificationClicks.subscribe( event => {\n    //   // console.log('Received notification: ', event);\n    //   const url = event.notification.data.url;\n    //   window.open(url, '_blank');\n    // });\n\n    this.swPush.notificationClicks.subscribe( event => {\n      alert('aaaaaaaaaaa');\n      console.log('clic notification', event);\n      // const url = event.notification.data.url;\n      // window.location.reload();\n      // window.open('reparto.papaya.com.pe');\n    });\n  }\n\n  getIsTienePermiso(): boolean {\n    return Notification.permission === 'granted' ? true : false;\n  }\n\n\n  // se suscribe a la notificacion\n  suscribirse(): void {\n    console.log('llego a suscribirse estado this.swPush.isEnabled: ', this.swPush.isEnabled);\n    // if ( this.swPush.isEnabled ) {\n      // this.swPush.subscription.subscribe(res => {\n        // if (!res) {return; }\n        // this.lanzarPermisoNotificationPush(option);\n        this.keySuscribtion();\n      // });\n    // }\n  }\n\n  //  suscriberse\n  private keySuscribtion() {\n    // console.log('keySuscribtion');\n    this.swPush\n    .requestSubscription({\n      serverPublicKey: VAPID_PUBLIC,\n    })\n    .then(subscription => {\n      // send subscription to the server\n      console.log('suscrito a notificaciones push', subscription);\n      this.saveSuscripcion(subscription);\n    })\n    .catch(console.error);\n  }\n\n  private saveSuscripcion(_subscription: any): void {\n    const _data = {\n      suscripcion: _subscription,\n      idcliente: this.infoTokenService.infoUsToken.idcliente\n    };\n\n    // console.log('push', _data);\n\n    this.crudService.postFree(_data, 'push', 'suscripcion', false)\n      .subscribe(res => console.log(res));\n  }\n\n  // private lanzarPermisoNotificationPush(option: number = 0) {\n  //   const _dialogConfig = new MatDialogConfig();\n  //   _dialogConfig.disableClose = true;\n  //   _dialogConfig.hasBackdrop = true;\n  //   _dialogConfig.data = {idMjs: option};\n\n  //   console.log('show dialog DialogDesicionComponent');\n  //   const dialogReset = this.dialog.open(DialogDesicionComponent, _dialogConfig);\n  //   dialogReset.afterClosed().subscribe(result => {\n  //     if (result ) {\n  //       console.log('result dialog DialogDesicionComponent', result);\n  //       // this.suscribirse();\n  //       this.keySuscribtion();\n  //     }\n  //   });\n  // }\n\n\n  // showMessages() {\n\n  //   // this.swPush.messages\n  //   //   .subscribe(message => {\n\n  //   //     console.log('[App] Push message received', message);\n\n  //   //     // let notification = message['notification'];\n\n  //   //     // this.tweets.unshift({\n  //   //     //   text: notification['body'],\n  //   //     //   id_str: notification['tag'],\n  //   //     //   favorite_count: notification['data']['favorite_count'],\n  //   //     //   retweet_count: notification['data']['retwe<et_count'],\n  //   //     //   user: {\n  //   //     //     name: notification['title']\n  //   //     //   }\n  //   //     // })\n\n  //   //   });\n\n  // }\n\n  // onNotification() {\n  //   this.swPush.messages\n  // }\n\n}\n"],"sourceRoot":"webpack:///"}