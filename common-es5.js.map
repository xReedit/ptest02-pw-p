{"version":3,"sources":["webpack:///src/app/componentes/dialog-desicion/dialog-desicion.component.html","webpack:///src/app/componentes/dialog-desicion/dialog-desicion.component.css","webpack:///src/app/componentes/dialog-desicion/dialog-desicion.component.ts","webpack:///src/app/shared/services/notificacion-push.service.ts"],"names":["DialogDesicionComponent","dialogRef","data","msj","titleBtnCancel","titleBtnSuccess","idMsj","idMjs","value","close","selector","template","NotificacionPushService","swPush","crudService","infoTokenService","notificationClicks","subscribe","event","alert","console","log","Notification","permission","isEnabled","keySuscribtion","requestSubscription","serverPublicKey","then","subscription","saveSuscripcion","error","_subscription","_data","suscripcion","idcliente","infoUsToken","postFree","res","providedIn"],"mappings":"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","file":"common-es5.js","sourcesContent":["export default \"<div class=\\\"p-3\\\">\\n    <span class=\\\"fw-100 fs-15\\\">{{msj}}</span>\\n    <hr>\\n    <div class=\\\"d-flex\\\">\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"cerrarDlg(true)\\\">{{titleBtnSuccess}}</button>\\n        <button class=\\\"ml-2 btn btn-danger\\\" (click)=\\\"cerrarDlg(false)\\\">{{titleBtnCancel}}</button>\\n    </div>\\n    <br>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL2RpYWxvZy1kZXNpY2lvbi9kaWFsb2ctZGVzaWNpb24uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog-desicion',\n  templateUrl: './dialog-desicion.component.html',\n  styleUrls: ['./dialog-desicion.component.css']\n})\nexport class DialogDesicionComponent implements OnInit {\n  msj = '';\n  titleBtnCancel = 'No';\n  titleBtnSuccess = 'Si, por favor';\n  constructor(\n    private dialogRef: MatDialogRef<DialogDesicionComponent>,\n    @Inject(MAT_DIALOG_DATA) data: any,\n  ) {\n    const idMsj = data ? data.idMjs : 0;\n    switch (idMsj) {\n      case 0:\n        this.msj = 'Desea que se le notifique cuando su pedido este listo?';\n        break;\n      case 1:\n        this.msj = 'Desea saber cuando tenga descuentos y/o ofertas?';\n        break;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n\n  cerrarDlg(value: boolean): void {\n    this.dialogRef.close(value);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { SwPush } from '@angular/service-worker';\nimport { CrudHttpService } from './crud-http.service';\nimport { InfoTockenService } from './info-token.service';\nimport { VAPID_PUBLIC } from '../config/config.const';\n// import { Observable } from 'rxjs/internal/Observable';\n// import { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n// import { DialogDesicionComponent } from 'src/app/componentes/dialog-desicion/dialog-desicion.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificacionPushService {\n\n  // private VAPID_PUBLIC = 'BC7ietauZE99Hx9HkPyuGVr8jaYETyEJgH-gLaYIsbORYobppt9dX49_K_wubDqphu1afi7XrM6x1zAp4kJh_wU';\n\n  constructor(\n    private swPush: SwPush,\n    private crudService: CrudHttpService,\n    private infoTokenService: InfoTockenService,\n    // private dialog: MatDialog,\n  ) {\n\n    // this.showMessages();\n\n    // this.swPush.notificationClicks.subscribe( event => {\n    //   // console.log('Received notification: ', event);\n    //   const url = event.notification.data.url;\n    //   window.open(url, '_blank');\n    // });\n\n    this.swPush.notificationClicks.subscribe( event => {\n      alert('aaaaaaaaaaa');\n      console.log('clic notification', event);\n      // const url = event.notification.data.url;\n      // window.location.reload();\n      // window.open('reparto.papaya.com.pe');\n    });\n  }\n\n  getIsTienePermiso(): boolean {\n    return Notification.permission === 'granted' ? true : false;\n  }\n\n\n  // se suscribe a la notificacion\n  suscribirse(): void {\n    console.log('llego a suscribirse estado this.swPush.isEnabled: ', this.swPush.isEnabled);\n    // if ( this.swPush.isEnabled ) {\n      // this.swPush.subscription.subscribe(res => {\n        // if (!res) {return; }\n        // this.lanzarPermisoNotificationPush(option);\n        this.keySuscribtion();\n      // });\n    // }\n  }\n\n  //  suscriberse\n  private keySuscribtion() {\n    // console.log('keySuscribtion');\n    this.swPush\n    .requestSubscription({\n      serverPublicKey: VAPID_PUBLIC,\n    })\n    .then(subscription => {\n      // send subscription to the server\n      console.log('suscrito a notificaciones push', subscription);\n      this.saveSuscripcion(subscription);\n    })\n    .catch(console.error);\n  }\n\n  private saveSuscripcion(_subscription: any): void {\n    const _data = {\n      suscripcion: _subscription,\n      idcliente: this.infoTokenService.infoUsToken.idcliente\n    };\n\n    // console.log('push', _data);\n\n    this.crudService.postFree(_data, 'push', 'suscripcion', false)\n      .subscribe(res => console.log(res));\n  }\n\n  // private lanzarPermisoNotificationPush(option: number = 0) {\n  //   const _dialogConfig = new MatDialogConfig();\n  //   _dialogConfig.disableClose = true;\n  //   _dialogConfig.hasBackdrop = true;\n  //   _dialogConfig.data = {idMjs: option};\n\n  //   console.log('show dialog DialogDesicionComponent');\n  //   const dialogReset = this.dialog.open(DialogDesicionComponent, _dialogConfig);\n  //   dialogReset.afterClosed().subscribe(result => {\n  //     if (result ) {\n  //       console.log('result dialog DialogDesicionComponent', result);\n  //       // this.suscribirse();\n  //       this.keySuscribtion();\n  //     }\n  //   });\n  // }\n\n\n  // showMessages() {\n\n  //   // this.swPush.messages\n  //   //   .subscribe(message => {\n\n  //   //     console.log('[App] Push message received', message);\n\n  //   //     // let notification = message['notification'];\n\n  //   //     // this.tweets.unshift({\n  //   //     //   text: notification['body'],\n  //   //     //   id_str: notification['tag'],\n  //   //     //   favorite_count: notification['data']['favorite_count'],\n  //   //     //   retweet_count: notification['data']['retwe<et_count'],\n  //   //     //   user: {\n  //   //     //     name: notification['title']\n  //   //     //   }\n  //   //     // })\n\n  //   //   });\n\n  // }\n\n  // onNotification() {\n  //   this.swPush.messages\n  // }\n\n}\n"]}