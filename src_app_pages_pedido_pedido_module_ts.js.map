{"version":3,"file":"src_app_pages_pedido_pedido_module_ts.js","mappings":"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","sources":["./src/app/pages/pedido/buscar-item/buscar-item.component.ts","./src/app/pages/pedido/busqueda/busqueda.component.ts","./src/app/pages/pedido/carta/carta.component.ts","./src/app/pages/pedido/estado-pedido/estado-pedido.component.ts","./src/app/pages/pedido/inicio/inicio.component.ts","./src/app/pages/pedido/main/main.component.ts","./src/app/pages/pedido/pedido.module.ts","./src/app/pages/pedido/pedido.routing.ts","./src/app/pages/pedido/resumen-pedido/dialog-loading/dialog-loading.component.ts","./src/app/pages/pedido/resumen-pedido/resumen-pedido.component.ts","./src/app/shared/services/json-print.service.ts","./src/app/shared/services/reglascarta.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-buscar-item',\n  templateUrl: './buscar-item.component.html',\n  styleUrls: ['./buscar-item.component.css']\n})\nexport class BuscarItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MipedidoService } from 'src/app/shared/services/mipedido.service';\nimport { CategoriaModel } from 'src/app/modelos/categoria.model';\nimport { SeccionModel } from 'src/app/modelos/seccion.model';\nimport { ItemModel } from 'src/app/modelos/item.model';\nimport { ItemTipoConsumoModel } from 'src/app/modelos/item.tipoconsumo.model';\nimport { SocketService } from 'src/app/shared/services/socket.service';\nimport { MatDialogConfig, MatDialog } from '@angular/material/dialog';\nimport { DialogItemEditComponent } from 'src/app/componentes/dialog-item-edit/dialog-item-edit.component';\n\n@Component({\n  selector: 'app-busqueda',\n  templateUrl: './busqueda.component.html',\n  styleUrls: ['./busqueda.component.css', '../pedido.style.css']\n})\nexport class BusquedaComponent implements OnInit {\n\n  objCartaBus: any = [];\n\n  private itemSelected: ItemModel;\n  private objItemTipoConsumoSelected: ItemTipoConsumoModel[];\n  private objNewItemTiposConsumo: ItemTipoConsumoModel[] = [];\n\n  constructor(\n    private socketService: SocketService,\n    private miPedidoService: MipedidoService,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  loadItemsBusqueda() {\n    let _objFind: any;\n    _objFind = this.miPedidoService.getObjCartaLibery();\n\n    // extraemos\n    let _itemFind: any;\n    _objFind.carta.map((c: CategoriaModel) => {\n      c.secciones.map((s: SeccionModel) => {\n        s.items.map((i: ItemModel) => {\n          _itemFind = i;\n          _itemFind.seccion = s.des;\n          _itemFind.selected = false;\n          this.objCartaBus.push(_itemFind);\n        });\n      });\n    });\n\n    // tipo consumo\n    this.objNewItemTiposConsumo = this.socketService.getDataTipoConsumo();\n    // console.log('_objFind', this.objCartaBus);\n  }\n\n  selectedItemBusq(selectedItem: ItemModel) {\n    this.objCartaBus.map(x => x.selected = false);\n    selectedItem.selected = true;\n    this.itemSelected = selectedItem;\n\n    const _objNewItemTiposConsumo = JSON.parse(JSON.stringify(this.objNewItemTiposConsumo));\n    this.objItemTipoConsumoSelected = selectedItem.itemtiposconsumo ? selectedItem.itemtiposconsumo : _objNewItemTiposConsumo;\n\n    if ( !selectedItem.itemtiposconsumo ) {\n      selectedItem.itemtiposconsumo = this.objItemTipoConsumoSelected;\n    }\n\n    this.miPedidoService.setobjItemTipoConsumoSelected(this.objItemTipoConsumoSelected);\n\n    this.openDlgItemBusq(selectedItem);\n  }\n\n  private openDlgItemBusq(_item: ItemModel): void {\n    const dialogConfig = new MatDialogConfig();\n    const _itemFromCarta = this.miPedidoService.findItemCarta(_item);\n\n    dialogConfig.autoFocus = false;\n    dialogConfig.data = {\n      idTpcItemResumenSelect: null,\n      // seccion: this.seccionSelected,\n      item: _itemFromCarta,\n      objItemTipoConsumoSelected: this.itemSelected.itemtiposconsumo\n    };\n\n    const dialogRef = this.dialog.open(DialogItemEditComponent, dialogConfig);\n\n    // subscribe al cierre y obtiene los datos\n    dialogRef.afterClosed().subscribe(\n        data => {\n          if ( !data ) { return; }\n          // console.log('data dialog', data);\n        }\n    );\n\n  }\n\n  getEstadoStockItem(stock: string): string {\n    if ( stock === 'ND' ) {\n      return 'verde';\n    } else {\n      const _stock = parseInt(stock, 0);\n      return _stock > 10 ? 'verde' : _stock > 5 ? 'amarillo' : 'rojo';\n    }\n  }\n\n}\n","import { Component, OnInit, OnDestroy, AfterViewInit, HostListener, Input } from '@angular/core';\nimport { SocketService } from 'src/app/shared/services/socket.service';\nimport { MipedidoService } from 'src/app/shared/services/mipedido.service';\nimport { NavigatorLinkService } from 'src/app/shared/services/navigator-link.service';\n\nimport { SeccionModel } from 'src/app/modelos/seccion.model';\nimport { CategoriaModel } from 'src/app/modelos/categoria.model';\nimport { ItemModel } from 'src/app/modelos/item.model';\nimport { TipoConsumoModel } from 'src/app/modelos/tipoconsumo.model';\nimport { ItemTipoConsumoModel } from 'src/app/modelos/item.tipoconsumo.model';\nimport { ReglascartaService } from 'src/app/shared/services/reglascarta.service';\nimport { ListenStatusService } from 'src/app/shared/services/listen-status.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DialogItemEditComponent } from 'src/app/componentes/dialog-item-edit/dialog-item-edit.component';\n\n// import { Subscription } from 'rxjs/internal/Subscription';\nimport { InfoTockenService } from 'src/app/shared/services/info-token.service';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { takeUntil } from 'rxjs/internal/operators/takeUntil';\nimport { URL_IMG_CARTA } from 'src/app/shared/config/config.const';\nimport { Subscription } from 'rxjs';\nimport { EstablecimientoService } from 'src/app/shared/services/establecimiento.service';\nimport { CalcDistanciaService } from 'src/app/shared/services/calc-distancia.service';\nimport { CrudHttpService } from 'src/app/shared/services/crud-http.service';\nimport { DialogCalificacionSedeComponent } from 'src/app/componentes/dialog-calificacion-sede/dialog-calificacion-sede.component';\nimport { SpeechDataProviderService } from 'src/app/shared/services/speech/speech-data-provider.service';\nimport { CocinarPromoShowService } from 'src/app/shared/services/promo/cocinar-promo-show.service';\n\n\n\n@Component({\n  selector: 'app-carta',\n  templateUrl: './carta.component.html',\n  styleUrls: ['./carta.component.css', '../pedido.style.css']\n})\nexport class CartaComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  private unsubscribeCarta = new Subscription();\n  // private destroyCarta$: Subject<boolean> = new Subject<boolean>();\n  // objCartaCarta: any;\n  objCartaBus: any = [];\n  isBusqueda = false;\n  rutaImgItem = URL_IMG_CARTA;\n  imgNull = './assets/images/icon-app/img-null.png';\n  private isCargado = true;\n\n  public showCategoria = false;\n  public showSecciones = false;\n  public showItems = false;\n  public showToolBar = false;\n\n  // max_minute_order = MAX_MINUTE_ORDER;\n  // time = new Date();\n\n  tituloToolBar = '';\n\n  rippleColor = 'rgb(255,238,88, 0.5)';\n\n  objSecciones: SeccionModel[] = [];\n  objItems: ItemModel[] = [];\n  objPromociones: any = null;\n  private categoriaSeleted: CategoriaModel;\n\n  // objSelectedItem: ItemModel;\n  // objSeccionSelected: SeccionModel = new SeccionModel();\n\n  // listItemsPedido: ItemModel[] = [];\n  // miPedido: PedidoModel = new PedidoModel();\n\n  private tiposConsumo: TipoConsumoModel[] = [];\n  private objItemTipoConsumoSelected: ItemTipoConsumoModel[];\n  private objNewItemTiposConsumo: ItemTipoConsumoModel[] = [];\n  private itemSelected: ItemModel;\n  private seccionSelected: SeccionModel;\n  private countSeeBack = 2; // primera vista al dar goback\n  private nomCategoriaSeleted = '';\n\n  private destroy$: Subject<boolean> = new Subject<boolean>();\n\n  private isFirstLoadListen = false; // si es la primera vez que se carga, para no volver a cargar los observables\n\n\n  // tamaño de la pamtalla\n  isScreenIsMobile = true;\n\n  isViewMercado = false;\n  isShowCalificacion = false;\n  isCliente = false;\n  isPuntoAutoPedido = false;\n  isTomaPedidoRapido = false;\n  canalConsumoTomaPedidoRapido: any;\n  dataCalificacion: any;\n\n  isCantidadCero = true;\n  animateBloqueoCategoria = false;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.detectScreenSize();\n  }\n\n\n\n  constructor(\n      private socketService: SocketService,\n      public miPedidoService: MipedidoService,\n      private reglasCartaService: ReglascartaService,\n      // private jsonPrintService: JsonPrintService,\n      private navigatorService: NavigatorLinkService,\n      private listenStatusService: ListenStatusService,\n      private infoToken: InfoTockenService,\n      private dialog: MatDialog,\n      private establecimientoService: EstablecimientoService,\n      private calcDistanciaService: CalcDistanciaService,\n      private crudService: CrudHttpService,\n      private speechDataProviderService: SpeechDataProviderService,\n      private cocinarPromoShowService: CocinarPromoShowService,\n      ) {\n\n  }\n\n  private detectScreenSize() {\n    this.isScreenIsMobile = window.innerWidth > 599 ? false : true;\n    // console.log(' window.innerWidth',  window.innerWidth);\n    // console.log(' this.isScreenIsMobile',  this.isScreenIsMobile);\n  }\n\n  ngOnInit() {\n    this.detectScreenSize();\n    // this.initCarta();\n\n    const _configPunto = JSON.parse(localStorage.getItem('sys::punto')) || {};\n    // console.log('this.establecimientoService.get()', this.establecimientoService.get());\n    this.isViewMercado = this.establecimientoService.get().pwa_show_item_view_mercado === 1;\n    this.isCliente = !!this.infoToken.infoUsToken.isCliente; // this.infoToken.infoUsToken.isCliente;\n    this.isPuntoAutoPedido = _configPunto.ispunto_autopedido || false;\n    this.isTomaPedidoRapido = _configPunto.istoma_pedido_rapido || false;\n\n    if ( this.isTomaPedidoRapido ) {\n      this.canalConsumoTomaPedidoRapido = _configPunto?.canal_consumo;\n    }\n\n    this.initCarta();\n    // console.log('this.establecimientoService.get()', this.establecimientoService.get());\n\n    // calificacion y comentarios\n    this.isShowCalificacion = this.establecimientoService.get().calificacion >= 3.7;\n    if ( this.isShowCalificacion ) {\n      this.dataCalificacion = {\n        calificacion: this.establecimientoService.get().calificacion,\n        cantidad: 0,\n        listCalificacion: []\n      };\n\n      const _dataSendCalificacion = {\n        idsede: this.establecimientoService.get().idsede\n      };\n\n      this.crudService.postFree(_dataSendCalificacion, 'delivery', 'get-calificacion-sede', false)\n      .subscribe((res: any) => {\n        this.dataCalificacion.listCalificacion = res.data;\n        this.dataCalificacion.cantidad = this.dataCalificacion.listCalificacion.map(c => c.numpedidos).reduce((a, b) => a + b, 0);\n      });\n    }\n\n    if ( this.infoToken.getInfoUs().isCliente && this.infoToken.getInfoUs().isDelivery &&  !this.infoToken.getInfoUs().isReserva) {\n      // console.log('calcula distancia desde carta');\n      this.calcDistanciaService.calcCostoEntregaApiGoogleRain(this.infoToken.getInfoUs().direccionEnvioSelected, this.establecimientoService.get());\n    }\n\n    // listen go back carta\n    this.listenStatusService.listenGoBackCarta$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => {\n        if ( res === true ) { this.goBack(); }\n      });\n  }\n\n  ngAfterViewInit() {\n    // this.initCarta();\n  }\n\n  initCarta() {\n    this.isCargado = true;\n    this.socketService.connect();\n    // console.log('loader carta');\n    this.listenStatusService.setLoaderCarta(true);\n\n    this.listeStatusBusqueda();\n\n    // descarga la constate del items scala delivery // tanto para cliente como para usuario\n    // if ( this.infoToken.isDelivery() ) {\n      if ( !this.infoToken.isReserva() ) {\n        this.miPedidoService.getDeliveryConstCantEscala();\n      }\n    // }\n\n    this.unsubscribeCarta = this.navigatorService.resNavigatorSourceObserve$.subscribe((res: any) => {\n\n      if (res.pageActive === 'carta') {\n        if (this.countSeeBack < 2) { this.countSeeBack++; return; }\n        this.goBack();\n      } else {\n        this.countSeeBack = 0;\n      }\n    });\n\n    // console.log('aaa');\n    this.establecimientoService.getComsionEntrega();\n    // if (!this.socketService.isSocketOpen) {\n      this.unsubscribeCarta = this.socketService.onGetCarta().subscribe((res: any) => {\n\n        // console.log('onGetCarta', res);\n        // this.objCartaCarta = {\n        //   'carta': <CartaModel[]>res[0].carta,\n        //   'bodega': <SeccionModel[]>res[0].bodega\n        // };\n        this.listenStatusService.setLoaderCarta(false);\n        // console.log('cerrar loader carta');\n\n        if (this.socketService.isSocketOpenReconect) {\n          // actualizar cantidad actual (stock actual) de ObjCarta del item\n          // if ( !this.miPedidoService.findIsHayItems() ) {\n          //   this.miPedidoService.updatePedidoFromStrorage();\n          // }\n\n            // this.objCartaCarta = res;\n            //\n            this.miPedidoService.setObjCarta(res);\n\n            this.resetParamsCarta();\n\n            if ( this.miPedidoService.findIsHayItems() ) {\n              this.miPedidoService.updatePedidoFromStrorage();\n            }\n\n            // console.log('objCartaCarta desde socket reconect');\n            this.navigatorService.setPageActive('carta');\n          // }\n\n          // para cargar la lista de mesas si se desconecta\n          localStorage.removeItem('sys::time-list-table');\n\n          return;\n        }\n        // this.objCartaCarta = res;\n        //\n        this.miPedidoService.setObjCarta(res);\n        // console.log('this.miPedidoService.objCarta', this.miPedidoService.objCarta);\n\n        if ( this.miPedidoService.objCarta.promociones ) {\n          if ( this.miPedidoService.objCarta.promociones.lista_promociones ) {\n          // if (this.miPedidoService.objCarta.promociones[0].idpromocion) {\n            this.objPromociones = this.miPedidoService.objCarta.promociones.lista_promociones;\n            // filtramos si hay solo app\n            if (!this.isCliente) {\n              this.objPromociones = this.objPromociones.filter(p => p.parametros.body.solo_app === 0);\n            }\n            this.cocinarPromoShowService.iniReloadOpenPromo(this.objPromociones);\n          }\n          // }\n        }\n        // console.log('this.objPromociones', this.objPromociones);\n\n        this.resetParamsCarta();\n\n        // this.isCargado = false;\n        // // this.showCategoria = true;\n\n        // this.objSecciones = [];\n        // this.objItems = [];\n        // this.showCategoria = false;\n        // this.showSecciones = false;\n        // this.showItems = false;\n        // this.showCategoria = true;\n\n\n        this.miPedidoService.clearPedidoIsLimitTime();\n        this.miPedidoService.updatePedidoFromStrorage();\n\n        // restaurar cuenta de timepo limite\n        // console.log('restore timer limt');\n        this.miPedidoService.restoreTimerLimit();\n\n        this.loadItemsBusqueda();\n\n        if ( this.isFirstLoadListen ) {return; }\n        this.isFirstLoadListen = true; // para que no vuelva a cargar los observables cuando actualizan desde sockets\n        this.miPedidoService.listenChangeCantItem(); // cuando se reconecta para que actualize\n      });\n\n      // tipo de consumo\n      this.unsubscribeCarta = this.socketService.onGetTipoConsumo().subscribe((res: TipoConsumoModel[]) => {\n        // console.log('tipo consumo ', res);\n        if (this.socketService.isSocketOpenReconect) {return; }\n        this.tiposConsumo = res;\n\n        // set tipos de consumo a new item tipo cosnumo para los item vista\n        this.tiposConsumo.map((t: TipoConsumoModel) => {\n          const _objTpcAdd = new ItemTipoConsumoModel();\n          _objTpcAdd.descripcion = t.descripcion;\n          _objTpcAdd.idtipo_consumo = t.idtipo_consumo;\n          _objTpcAdd.titulo = t.titulo;\n          _objTpcAdd.idimpresora = t.idimpresora;\n\n          // filtramos los tipos de consumo segun qr escaneado o personal autorizado\n\n\n          if ( this.infoToken.isCliente() ) {\n            if ( !this.infoToken.isDelivery() ) {\n              if ( t.descripcion === 'DELIVERY' ) { return; }\n              if ( this.infoToken.isSoloLlevar() && t.descripcion.indexOf('LLEVAR') === -1 ) { return; }\n            } else {\n              if ( t.descripcion !== 'DELIVERY' ) { return; } else {_objTpcAdd.descripcion = 'CANTIDAD'; }\n            }\n          }\n\n          if ( this.infoToken.isPuntoAutoPedido()  ) {\n            // solo para llevar\n            if ( t.descripcion.indexOf('LLEVAR') === -1 ) { return; }\n          }\n\n          // if ( this.infoToken.isCliente() && t.descripcion === 'DELIVERY' ) {\n\n          // } else {\n            this.objNewItemTiposConsumo.push(_objTpcAdd);\n          // }\n        });\n\n        // console.log('this.objNewItemTiposConsumo', this.objNewItemTiposConsumo);\n\n        this.miPedidoService.setObjNewItemTiposConsumo(this.objNewItemTiposConsumo);\n\n        this.navigatorService.addLink('carta-i-');\n\n        // console.log('this.objNewItemTiposConsumo', this.objNewItemTiposConsumo);\n        // this.tiposConsumo.secciones = [];\n\n        // this.loadItemsBusqueda();\n\n        this.initFirtsCategoria();\n      });\n\n\n      // descuentos\n      this.unsubscribeCarta = this.socketService.onGetDataSedeDescuentos().subscribe((res: any) => {\n        // console.log('onGetDataSedeDescuentos', res);\n        // console.log('infoToken', this.infoToken.infoUsToken);\n        this.miPedidoService.setObjCartaDescuentos(res);\n      });\n\n\n      // this.socketService.onGetClienteLlama().subscribe((res: any) => {\n      //   console.log('cliente llama', res);\n      //   // this.listenStatusService.setCallListClienteAtencion(res);\n      // });\n\n    // }\n\n    // reglas de la carta y subtotales\n    this.reglasCartaService.loadReglasCarta();\n\n    // this.miPedidoService.listenChangeCantItem();\n\n    // datos de la sede, impresoras\n    // this.jsonPrintService.getDataSede();\n  }\n\n  // si la carta solo tiene un categoria ( cena almuerzo entra de frente)\n  private initFirtsCategoria() {\n    // if ( this.isScreenIsMobile ) {return; }\n    if ( this.miPedidoService.objCarta.carta.length === 1 ) {\n      this.objSecciones = this.miPedidoService.objCarta.carta[0].secciones;\n      this.tituloToolBar = this.miPedidoService.objCarta.carta[0].des;\n      this.showSecciones = true;\n      this.showCategoria = false;\n      this.showToolBar = true;\n\n      // if ( this.isScreenIsMobile ) {\n        this.getSecciones(this.miPedidoService.objCarta.carta[0]);\n        // return; }\n\n      if ( !this.isScreenIsMobile ) {\n        this.getItems(this.objSecciones[0]);\n      }\n\n      // seleciona la primera seccion\n      this.objItems = this.objSecciones[0].items;\n    }\n\n    // if ( this.miPedidoService.objCarta.promociones.length !== 0 ) {\n    //   this.objPromociones = this.miPedidoService.objCarta.promociones;\n    // }\n    // console.log('this.miPedidoService.objCarta.carta;', this.miPedidoService.objCarta.carta);\n  }\n\n\n  // al obtener la carta\n  private resetParamsCarta(): void {\n    this.isCargado = false;\n    this.objSecciones = [];\n    this.objItems = [];\n    // this.showCategoria = false;\n    this.showSecciones = false;\n    this.showItems = false;\n    this.showToolBar = false;\n    this.showCategoria = true;\n  }\n\n  ngOnDestroy(): void {\n    // console.log('======= unsubscribe ======= ');\n    this.unsubscribeCarta.unsubscribe();\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n    // this.unsubscribe$.next();\n    // this.unsubscribe$.complete();\n  }\n\n  private showAnimateBloqueoCategoria(categoria: CategoriaModel) {\n    categoria.animateBloqueoCategoria = true;\n\n      setTimeout(() => {\n        categoria.animateBloqueoCategoria = false;\n      }, 300);\n  }\n\n  getSecciones(categoria: CategoriaModel) {\n    // chequea si esta disponible\n    if ( !this.isCliente && !categoria.abierto) { // si es personal autorizado\n      if ( categoria.accesible_mozo === '1' ) {\n        this.showAnimateBloqueoCategoria(categoria);\n        return;\n      }\n    }\n\n    if ( this.isCliente && !categoria.abierto ) {\n      this.showAnimateBloqueoCategoria(categoria);\n      return;\n    }\n\n\n    this.categoriaSeleted = categoria;\n    setTimeout(() => {\n      this.objSecciones = categoria.secciones;\n      this.showSecciones = true;\n      this.showCategoria = false;\n      this.showToolBar = true;\n\n      // local storage categoria\n      localStorage.setItem('sys::cat', categoria.idcategoria.toString());\n\n      this.tituloToolBar = categoria.des;\n      this.nomCategoriaSeleted = categoria.des;\n      this.navigatorService.addLink('carta-i-secciones');\n    }, 250);\n  }\n\n  getItems(seccion: SeccionModel) {\n    this.miPedidoService.setObjSeccionSeleced(seccion);\n    setTimeout(() => {\n      this.seccionSelected = seccion;\n      this.objItems = seccion.items;      \n      this.showItems = true;\n\n      setTimeout(() => {\n        this.showSecciones = false;\n      }, 200);\n\n      if ( this.isScreenIsMobile ) {\n        // if ( this.tituloToolBar.indexOf(seccion.des) === -1) {\n          this.tituloToolBar = this.nomCategoriaSeleted + ' / ' + seccion.des;\n        // }\n      }\n\n      // console.log('this.objItems', this.objItems);\n\n      this.navigatorService.addLink('carta-i-secciones-items');\n    }, 150);\n\n  }\n\n  getItemsPromo(items: ItemModel[]) {\n    setTimeout(() => {\n      this.objItems = items;\n      this.showSecciones = false;\n      this.showItems = true;\n      this.navigatorService.addLink('carta-i-secciones-items');\n    }, 150);\n  }\n\n  private getItems_seccion_from_busqueda(_itemBus: any): any {\n    const _seccionBus = {\n      des: _itemBus.seccion,\n      idseccion: _itemBus.idseccion,\n      idimpresora: _itemBus.idimpresora,\n      sec_orden: _itemBus.sec_orden,\n      ver_stock_cero: _itemBus.ver_stock_cero,\n    };\n\n    this.miPedidoService.setObjSeccionSeleced(<SeccionModel>_seccionBus);\n  }\n\n\n  /// busqueda\n  loadItemsBusqueda() {\n    let _objFind: any;\n    // _objFind = this.miPedidoService.getObjCartaLibery();\n    _objFind = this.miPedidoService.getObjCarta();\n\n    // extraemos\n    let _itemFind: any;\n    if ( !_objFind.carta ) { return; }\n    _objFind.carta.map((c: CategoriaModel) => {\n      c.secciones.map((s: SeccionModel) => {\n        s.items.map((i: ItemModel) => {\n          _itemFind = i;\n          _itemFind.seccion = s.des;\n          _itemFind.idimpresora = s.idimpresora;\n          _itemFind.sec_orden = s.sec_orden;\n          _itemFind.ver_stock_cero = s.ver_stock_cero;\n          _itemFind.selected = false;\n          _itemFind.visible = true;\n          this.objCartaBus.push(_itemFind);\n        });\n      });\n    });\n\n    // reset busqueda\n    window.localStorage.setItem('sys::find', '');\n    // tipo consumo\n    // console.log('_objFind', this.objCartaBus);\n  }\n\n\n\n  goBack() {\n\n    try {\n      if ( this.miPedidoService.objCarta.carta.length === 1 && !this.isScreenIsMobile ) {return; } // si no es celular no regresa\n    } catch (error) {}\n\n    this.objItems.map(x => x.selected = false);\n    if (this.showItems) {\n      this.showItems = false;\n      // setTimeout(() => {\n      //   this.showItems = false;\n      // }, 50);\n      this.showSecciones = true;\n      this.tituloToolBar = this.tituloToolBar.split(' / ')[0];\n      // this.navigatorService.addLink('carta-i-secciones');\n      return;\n    }\n    if (this.showSecciones) {\n      this.showSecciones = false; this.showToolBar = false; this.showCategoria = true;\n      // this.navigatorService.addLink('carta-i-');\n    }\n  }\n\n  selectedItem(_selectedItem: ItemModel, openDetalle = false) {\n    // if (!this.isBusqueda) {\n    //   this.objItems.map(x => x.selected = false);\n    // } else {\n    //   this.objCartaBus.map(x => x.selected = false);\n    // }\n\n    // console.log('_selectedItem', _selectedItem);\n\n    if ( (this.isPuntoAutoPedido || this.isTomaPedidoRapido || this.isCliente) && !openDetalle && _selectedItem?.count_subitems === 0 ) {\n      if ( !this.isViewMercado ) {\n        this.resultCantItemMercado(_selectedItem, true);\n        return;\n      }\n    }\n\n    if ( _selectedItem.cantidad.toString() === '0' && !_selectedItem.cantidad_seleccionada ) { return; }\n\n    _selectedItem.selected = true;\n    this.itemSelected = _selectedItem;\n\n    const _objNewItemTiposConsumo = JSON.parse(JSON.stringify(this.objNewItemTiposConsumo));\n    this.objItemTipoConsumoSelected = _selectedItem.itemtiposconsumo ? _selectedItem.itemtiposconsumo : _objNewItemTiposConsumo;\n\n    if ( !_selectedItem.itemtiposconsumo ) {\n      _selectedItem.itemtiposconsumo = this.objItemTipoConsumoSelected;\n    }\n\n    // confirma que la seccion del item sea igual a la seccion del // si viene x ej de promo\n    const idSeccionSelected = this.seccionSelected?.idseccion || 0;\n    const _lastSeccionObjSeleted = this.miPedidoService.getObjSeccionSeleced();\n    const _reasignarSeccion = _lastSeccionObjSeleted.idseccion !== idSeccionSelected;\n    if ( this.itemSelected.idseccion !== idSeccionSelected || _reasignarSeccion) {\n      this.seccionSelected = this.miPedidoService.findItemSeccionCarta(this.itemSelected.idseccion);\n      this.miPedidoService.setObjSeccionSeleced(this.seccionSelected);\n    }\n\n\n\n    this.miPedidoService.setobjItemTipoConsumoSelected(this.objItemTipoConsumoSelected);\n\n    this.openDlgItem(_selectedItem);\n  }\n\n  // abrir el dialog item\n  private openDlgItem(_item: ItemModel): void {\n    const dialogConfig = new MatDialogConfig();\n    const _itemFromCarta = _item.ispromo ? _item : this.miPedidoService.findItemCarta(_item);\n    if ( !_itemFromCarta.itemtiposconsumo ) {\n      _itemFromCarta.itemtiposconsumo = _item.itemtiposconsumo;\n    }\n    // const _seccionItemSelect = this.miPedidoService.findItemSeccionCarta(_itemFromCarta.idseccion);\n\n    dialogConfig.autoFocus = false;\n    dialogConfig.data = {\n      idTpcItemResumenSelect: null,\n      seccion: !this.isBusqueda ? this.seccionSelected : this.miPedidoService.findItemSeccionCarta(_itemFromCarta.idseccion),\n      item: _itemFromCarta,\n      objItemTipoConsumoSelected: this.itemSelected.itemtiposconsumo\n    };\n    dialogConfig.panelClass =  ['my-dialog-orden-detalle', 'margen-0', 'my-dialog-item-producto'];\n\n    const dialogRef = this.dialog.open(DialogItemEditComponent, dialogConfig);\n\n    // subscribe al cierre y obtiene los datos\n    dialogRef.afterClosed().subscribe(\n        data => {\n          if ( !data ) { return; }\n          // console.log('data dialog', data);\n        }\n    );\n\n  }\n\n\n  addItemToPedido(tpcSelect: ItemTipoConsumoModel, suma: number): void {\n    this.miPedidoService.addItem2(tpcSelect, this.itemSelected, suma);\n  }\n\n  addItemToPedidoFromBusqueda(tpcSelect: ItemTipoConsumoModel, suma: number): void {\n    // setea la seccion del item\n    this.getItems_seccion_from_busqueda(this.itemSelected);\n\n    // agrega el item\n    this.miPedidoService.addItem2(tpcSelect, this.itemSelected, suma);\n  }\n\n  addItemIndicaciones(itemCarta: ItemModel, _indicaciones: string): void {\n    // console.log('indicaciones', _indicaciones);\n    this.itemSelected.indicaciones = _indicaciones;\n    itemCarta.indicaciones = _indicaciones;\n\n    // const _itemInMipedido = this.miPedidoService.findOnlyItemMiPedido(itemCarta);\n    // if ( _itemInMipedido ) {\n    //   _itemInMipedido.indicaciones = _indicaciones;\n    // }\n  }\n\n  getEstadoStockItem(stock: any): string {\n    if ( stock === 'ND' || isNaN(stock) ) {\n      // stock = 'ND';\n      return 'verde';\n    } else {\n      const _stock = parseInt(stock, 0);\n      return _stock > 10 ? 'verde' : _stock > 5 ? 'amarillo' : 'rojo';\n    }\n  }\n\n  private listeStatusBusqueda(): void {\n    this.listenStatusService.isBusqueda$.subscribe(res => {\n      this.isBusqueda = res;\n    });\n\n    this.listenStatusService.charBuqueda$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((res: string) => {\n      this.isBusquedaFindNow(res);\n    });\n\n    this.socketService.isSocketOpen$\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(res => {\n      if (!res) {\n        // console.log('===== unsubscribe unsubscribe Carta =====');\n        this.unsubscribeCarta.unsubscribe();\n      }\n    });\n\n\n    // ===== COMANDOS DE VOZ =========== //\n    // listen comando voz navegacion;\n    this.speechDataProviderService.commandNavegacionSeccion$\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((rpt_seccion: SeccionModel) => {\n      if (rpt_seccion) {\n        // if (this.showCategoria ) {\n          const _categoria = this.miPedidoService.objCarta.carta[0];\n          this.getSecciones(_categoria);\n          setTimeout(() => {\n            this.getItems(rpt_seccion);\n          }, 100);\n        // } else {\n        //   this.getItems(rpt_seccion);\n        // }\n      }\n    });\n\n    // listen comando voz navegacion;\n    this.speechDataProviderService.commandNavegacionRecomendado$\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((itemsRecomendados: any) => {\n      if (itemsRecomendados.length > 0) {\n          this.getItemsPromo(itemsRecomendados);\n      }\n    });\n\n    // escuhar si se aumenta pedido\n    this.speechDataProviderService.commandAddItem$\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((itemVoz: any) => {\n      if (itemVoz) {\n        this.resultCantItemMercado(itemVoz.item, itemVoz.isSuma);\n      }\n    });\n\n\n    // ===== COMANDOS DE VOZ =========== //\n  }\n\n  private isBusquedaFindNow(charFind: string): void {\n    charFind = charFind.toLowerCase();\n    // console.log(charFind);\n    let _charConcat = '';\n    this.objCartaBus.map((i: any) => {\n      _charConcat = `${i.des} ${i.seccion} ${i.detalles}`;\n      _charConcat = _charConcat.toLowerCase();\n      i.visible = _charConcat.indexOf(charFind) > -1 ? true : false;\n    });\n  }\n\n  getObjDetalleSeccion(seccion: SeccionModel): String {\n    let resp = '';\n    if (seccion.items === null ) {return; }\n    seccion.items.map((i: ItemModel, index: number) => {\n      if (index > 5) {return; }\n      resp += i.des.toLowerCase() + ', ';\n    });\n\n    return resp.slice(0, -2);\n  }\n\n  resultCantItemMercado(_selectedItem: any, isSuma_selected = false) {\n    // solo para delivery\n    // isSuma_selected viene de agregar al clic\n    this.itemSelected = _selectedItem;\n\n    // busca el canal consumo predeteminado\n    // if ( this.isTomaPedidoRapido ) {\n    //   this.objItemTipoConsumoSelected = this.canalConsumoTomaPedidoRapido;\n    // } else {\n      const _objNewItemTiposConsumo = JSON.parse(JSON.stringify(this.objNewItemTiposConsumo));\n      this.objItemTipoConsumoSelected = _selectedItem.itemtiposconsumo ? _selectedItem.itemtiposconsumo : _objNewItemTiposConsumo;\n    // }\n\n    if ( !_selectedItem.itemtiposconsumo ) {\n      _selectedItem.itemtiposconsumo = this.objItemTipoConsumoSelected;\n    }\n\n    this.miPedidoService.setobjItemTipoConsumoSelected(this.objItemTipoConsumoSelected);\n    let tpcSelect =  this.objItemTipoConsumoSelected[0];\n    if ( this.isTomaPedidoRapido ) {\n      tpcSelect = this.objItemTipoConsumoSelected.filter(x => x.descripcion.toLocaleLowerCase() === this.canalConsumoTomaPedidoRapido.descripcion.toLocaleLowerCase())[0];\n    }\n    const _isSuma = isSuma_selected ? 0 : _selectedItem.isSuma_selected ? 0 : 1;\n\n\n    // confirma que la seccion del item sea igual a la seccion del\n    const idSeccionSelected = this.seccionSelected?.idseccion || 0;\n    const _lastSeccionObjSeleted = this.miPedidoService.getObjSeccionSeleced();\n    const _reasignarSeccion = _lastSeccionObjSeleted.idseccion !== idSeccionSelected;\n    if ( this.itemSelected.idseccion !== idSeccionSelected || _reasignarSeccion) {\n      this.seccionSelected = this.miPedidoService.findItemSeccionCarta(this.itemSelected.idseccion);\n      this.miPedidoService.setObjSeccionSeleced(this.seccionSelected);\n    }\n\n    // console.log('_selectedItem carta', _selectedItem);\n    this.miPedidoService.addItem2(tpcSelect, this.itemSelected, _isSuma);\n\n    _selectedItem.is_visible_control_last_add = _selectedItem.cantidad_seleccionada !== 0;\n  }\n\n  // addSubItem(subitem: SubItem): void {\n  //   // subitem.selected = !subitem.selected;\n\n  //   // if ( subitem.selected ) {\n  //     // const listSubItemChecked = this.itemSelected.subitems.filter((x: SubItem) => x.selected);\n  //     // let countSelectReq = listSubItemChecked.length;\n\n  //     // // adicional el importe al precio del item\n  //     // this.itemSelected.precio = this.itemSelected.precio_unitario + subitem.precio;\n  //     // // this.itemSelected.precio_total = parseFloat(this.itemSelected.precio);\n\n\n  //     // listSubItemChecked.map( (_subItem: SubItem, i: number) =>  {\n  //     //   if (countSelectReq > this.itemSelected.subitem_cant_select && _subItem !== subitem) {\n  //     //     _subItem.selected = false;\n  //     //     countSelectReq--;\n  //     //   }\n  //     // });\n\n\n  //   // }\n  // }\n\n\n  openDialogComentarios() {\n    const dialogConfig = new MatDialogConfig();\n\n    // dialogConfig.panelClass = 'dialog-item-edit';\n    dialogConfig.autoFocus = false;\n    dialogConfig.data = this.dataCalificacion;\n    dialogConfig.panelClass =  ['my-dialog-orden-detalle', 'my-dialog-scrool'];\n\n    const dialogRef = this.dialog.open(DialogCalificacionSedeComponent, dialogConfig);\n\n    // subscribe al cierre y obtiene los datos\n    dialogRef.afterClosed().subscribe(\n        data => {\n          if ( !data ) { return; }\n\n        }\n    );\n  }\n\n\n  showItemsPromo(promo: any) {\n    // if ( this.cocinarPromoShowService.consultarPromoAbierto(promo) ) {\n      const itemsPromo = this.cocinarPromoShowService.promoFilterShow(promo, this.categoriaSeleted);\n      this.getItemsPromo(itemsPromo);\n    // } else {\n    //   promo.abierto = 0;\n    //   console.log('aaaaaaaaaaaaaa');\n    // }\n  }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ListenStatusService } from 'src/app/shared/services/listen-status.service';\nimport { EstadoPedidoModel } from 'src/app/modelos/estado.pedido.model';\nimport { EstadoPedidoClienteService } from 'src/app/shared/services/estado-pedido-cliente.service';\nimport { InfoTockenService } from 'src/app/shared/services/info-token.service';\nimport { UsuarioTokenModel } from 'src/app/modelos/usuario.token.model';\nimport { NavigatorLinkService } from 'src/app/shared/services/navigator-link.service';\nimport { SocketService } from 'src/app/shared/services/socket.service';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { takeUntil } from 'rxjs/operators';\nimport { EstablecimientoService } from 'src/app/shared/services/establecimiento.service';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { DatosFacturacionClienteComponent } from 'src/app/componentes/datos-facturacion-cliente/datos-facturacion-cliente.component';\n// import { takeUntil } from 'rxjs/internal/operators/takeUntil';\n\n@Component({\n  selector: 'app-estado-pedido',\n  templateUrl: './estado-pedido.component.html',\n  styleUrls: ['./estado-pedido.component.css']\n})\nexport class EstadoPedidoComponent implements OnInit, OnDestroy {\n  estadoPedido: EstadoPedidoModel;\n  infoToken: UsuarioTokenModel;\n  tiempoEspera: number;\n  rippleColor = 'rgb(255,238,88, 0.5)';\n  tituloMesa = 'Mesa';\n\n  isViewMsjSolicitudPersoanl = false;\n  isDeliveryCliente: boolean;\n  isComercioAceptaTarjeta = false;\n\n  private isBtnPagoShow = false; // si el boton de pago ha sido visible entonces recarga la pagina de pago\n\n  // private unsubscribeEstado = new Subscription();\n  private destroyEstado$: Subject<boolean> = new Subject<boolean>();\n\n  simbolo_moneda: string;\n\n\n\n  constructor(\n    private listenStatusService: ListenStatusService,\n    private estadoPedidoClienteService: EstadoPedidoClienteService,\n    private infoTokenService: InfoTockenService,\n    private navigatorService: NavigatorLinkService,\n    private socketService: SocketService,\n    private router: Router,\n    private establecimientoService: EstablecimientoService,\n    private dialogDatosFacturacion: MatDialog,\n  ) { }\n\n  ngOnInit() {\n\n    // verificar en el localstorage\n    this.infoToken = this.infoTokenService.getInfoUs();\n    this.isDeliveryCliente = this.infoToken.isDelivery;\n\n    // this.estadoPedidoClienteService.get();\n\n    this.simbolo_moneda = this.establecimientoService.getSimboloMoneda();\n\n    // console.log('this.establecimientoService', this.establecimientoService.get() );\n    this.isComercioAceptaTarjeta = this.establecimientoService.get().pwa_delivery_acepta_tarjeta === 1;\n\n    // escuchar cambios\n    this.listenStatus();\n\n  }\n\n  ngOnDestroy(): void {\n    // this.unsubscribeEstado.unsubscribe();\n    // this.unsubscribe$.next();\n    // this.unsubscribe$.complete();\n\n    this.destroyEstado$.next(true);\n    this.destroyEstado$.unsubscribe();\n  }\n\n  private listenStatus() {\n\n    this.navigatorService.resNavigatorSourceObserve$\n    .pipe(takeUntil(this.destroyEstado$))\n    .subscribe((res: any) => {\n      if (res.pageActive === 'estado') {\n        this.tituloMesa = this.infoToken.isSoloLLevar ? 'Para Llevar' : 'Mesa';\n        // if ( this.estadoPedido.importe > 0 ) {\n\n          setTimeout(() => {\n            this.estadoPedidoClienteService.getCuentaTotales();\n          }, 2500);\n        // }\n      }\n    });\n\n    this.navigatorService.resNavigatorSourceObserve$\n    .pipe(takeUntil(this.destroyEstado$))\n    .subscribe(async (res: any) => {\n      if (res.pageActive === 'estado') {\n\n        const _importe = await this.estadoPedidoClienteService.getImporteCuenta();\n        this.estadoPedido.importe = <number>_importe || 0;\n        // this.estadoPedidoClienteService.getCuentaTotales();\n      }\n    });\n\n    this.listenStatusService.hayPedidoPendiente$\n      .pipe(takeUntil(this.destroyEstado$))\n      .subscribe((res: boolean) => {\n        this.estadoPedidoClienteService.setHayPedidoPendiente(res);\n      });\n\n    this.listenStatusService.estadoPedido$\n    .pipe(takeUntil(this.destroyEstado$))\n    .subscribe(res => {\n      this.estadoPedido = res;\n\n\n      // if ( _importe === 0 ) {\n      if ( this.estadoPedido.importe === 0 && this.estadoPedido.isRegisterOnePago ) {\n        // this.unsubscribeEstado.unsubscribe();\n        this.estadoPedidoClienteService.setisRegisterPago(false);\n        this.navigatorService._router('../lanzar-encuesta');\n      }\n\n      // recalcular cuenta si es 0 agradecimiento y lanzar encuesta si aun no la lleno\n      // if (this.estadoPedido.isPagada) {\n      //   this.navigatorService._router('../lanzar-encuesta');\n      // }\n    });\n\n    // tiempo de espera\n    this.estadoPedidoClienteService.timeRestanteAprox$.subscribe((res: any) => {\n      this.tiempoEspera = res;\n\n    });\n\n    this.socketService.onPedidoPagado()\n    .pipe(takeUntil(this.destroyEstado$))\n    .subscribe(res => {\n\n      // recalcular cuenta si es 0 agradecimiento y lanzar encuesta si aun no la lleno\n      this.estadoPedidoClienteService.getCuentaTotales();\n      this.estadoPedidoClienteService.setisRegisterPago(true);\n    });\n\n    this.listenStatusService.isBtnPagoShow$\n    .pipe(takeUntil(this.destroyEstado$))\n    .subscribe((res: boolean) => { this.isBtnPagoShow = res; });\n  }\n\n  verCuenta() {\n\n    this.estadoPedidoClienteService.getCuenta();\n    this.navigatorService.setPageActive('mipedido');\n  }\n\n  pagarCuenta() {\n    // this.navigatorService._router('./pagar-cuenta');\n    if ( !localStorage.getItem('sys::st') ) {\n      this.verCuenta();\n      return;\n    }\n\n    this.estadoPedidoClienteService.getCuenta(); // get subtotales - esta listen resumen-pedido;\n    this.router.navigate(['./pagar-cuenta'])\n    .then(() => {\n      if ( this.isBtnPagoShow ) {\n        window.location.reload();\n      }\n    });\n\n    this.listenStatusService.setIsPagePagarCuentaShow(true);\n  }\n\n  // el cleinte solicita atencion del personal. -- notifica en caja\n  solicitarAtencion() {\n    if ( this.isViewMsjSolicitudPersoanl ) { return; }\n    console.log('notificar-cliente-llamado');\n    this.socketService.emit('notificar-cliente-llamado', this.infoToken.numMesaLector);\n    this.isViewMsjSolicitudPersoanl = true;\n    setTimeout(() => {\n      this.isViewMsjSolicitudPersoanl = false;\n    }, 30000);\n  }\n\n  showDatosFacturacion() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.panelClass =  ['my-dialog-orden-detalle', 'margen-0'];\n\n    this.dialogDatosFacturacion.open(DatosFacturacionClienteComponent, dialogConfig);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MipedidoService } from 'src/app/shared/services/mipedido.service';\n\nimport { Event as NavigationEvent, Router, NavigationStart } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  isVisibleToolBar = true;\n  countTotalItems = 0;\n  private lastValScrollTop = 0;\n\n  constructor(\n    private miPedidoService: MipedidoService,\n    private router: Router\n  ) {\n\n    router.events.pipe(\n      filter((event: NavigationEvent) => {\n        return (event instanceof NavigationStart);\n      })\n    ).subscribe(\n      (event: NavigationStart) => {\n        console.log('navigation', event);\n      });\n  }\n\n  ngOnInit() {\n\n    this.miPedidoService.countItemsObserve$.subscribe((res) => {\n      this.countTotalItems = res;\n    });\n  }\n\n  onScroll($event: any): void {\n    const val = $event.srcElement.scrollTop;\n    this.isVisibleToolBar = val >= this.lastValScrollTop && val > 54 ? false : true;\n\n    setTimeout(() => {\n      this.lastValScrollTop = val;\n    }, 100);\n  }\n\n  addLink(propiedad) {\n    // this.router.navigate(['/', { id: propiedad}]);\n    this.router.navigate(['../../', { id: propiedad }]);\n  }\n}\n","import { Component, OnInit, HostListener } from '@angular/core';\nimport { MipedidoService } from 'src/app/shared/services/mipedido.service';\nimport { NavigatorLinkService } from 'src/app/shared/services/navigator-link.service';\nimport { ListenStatusService } from 'src/app/shared/services/listen-status.service';\nimport { SocketService } from 'src/app/shared/services/socket.service';\nimport { VerifyAuthClientService } from 'src/app/shared/services/verify-auth-client.service';\nimport { SocketClientModel } from 'src/app/modelos/socket.client.model';\nimport { EstablecimientoService } from 'src/app/shared/services/establecimiento.service';\nimport { InfoTockenService } from 'src/app/shared/services/info-token.service';\nimport { ComandAnalizerService } from 'src/app/shared/services/speech/comand-analizer.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  isVisibleToolBar = true;\n  isBusqueda = false;\n  isHayCuentaBusqueda = false;\n  countTotalItems = 0;\n  selectedTab = 0;\n  isUsuarioCliente = false; // si es usuario cliente\n  isClienteDelivery = false;\n  isClienteReserva = false;\n  isPagePagarShow = false;\n  isPuntoAutoPedido = false;\n  loaderPage = false;\n  timeLoader = null;\n  isSpeechVoiceAcivado = false;\n\n\n  private lastValScrollTop = 0;\n  importeTotalProductos = 0;\n\n\n  // tamaño de la pamtalla\n  isScreenIsMobile = true;\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.detectScreenSize();\n  }\n\n  constructor(\n    private miPedidoService: MipedidoService,\n    private navigatorService: NavigatorLinkService,\n    public listenStatusService: ListenStatusService,\n    public socketService: SocketService,\n    private verifyClientService: VerifyAuthClientService,\n    private infoTokenService: InfoTockenService,\n    // private comandAnalizerService: ComandAnalizerService,\n    private establecimientoService: EstablecimientoService,\n    ) {\n      // console.log('verifyClientService', this.verifyClientService.get);\n      // this.comandAnalizerService.getIsActive();\n      // this.comandAnalizerService.getComands();\n    }\n\n  private detectScreenSize() {\n    this.isScreenIsMobile = window.innerWidth > 1049 ? false : true;\n    // console.log('window.innerWidth', window.innerWidth);\n    // console.log('this.isScreenIsMobile', this.isScreenIsMobile);\n  }\n\n  ngOnInit() {\n\n    // console.log('this.infoTokenService.getInfoUs()', this.infoTokenService.getInfoUs());\n    this.detectScreenSize();\n    this.socketService.isSocketOpenReconect = false;\n    this.navigatorService.setPageActive('carta');\n\n\n    this.infoTokenService.getInfoUs();\n    this.isPuntoAutoPedido = this.infoTokenService.isPuntoAutoPedido();\n    this.isSpeechVoiceAcivado = this.establecimientoService.get().speech_disabled === 1;\n    // this.navigatorService.addLink('carta');\n\n    // console.log('this.infoTokenService.infoUsToken', this.infoTokenService.infoUsToken);\n    // console.log('pedido main verifyClient');\n    // console.log('verifyClient from main pedido');\n    this.verifyClientService.verifyClient().subscribe((res: SocketClientModel) => {\n      // console.log('desde main pedido', res);\n      // console.log('this.infoTokenService', this.infoTokenService);\n      if ( !res ) { this.isUsuarioCliente = this.infoTokenService.infoUsToken.isCliente; } else {\n        this.isUsuarioCliente = res.isCliente || false;\n      }\n      this.listenStatusService.setIsUsuarioCliente(this.isUsuarioCliente);\n      this.isClienteDelivery = res?.isDelivery;\n      this.isClienteReserva = res?.isReserva;\n\n      // -----------------> ACTIVAR MOZO VIRTUAL\n      // 250122 quitamos speech x mejorar\n      // const _isActiveMozoVoz =  this.isSpeechVoiceAcivado && this.isUsuarioCliente && !this.isClienteDelivery;\n      // console.log('_isActiveMozoVoz', _isActiveMozoVoz);\n      // this.infoTokenService.setIsAvtiveMozoVoz(_isActiveMozoVoz);\n\n      // if ( _isActiveMozoVoz ) {\n      //   this.comandAnalizerService.getComands();\n      //   setTimeout(() => {\n      //     this.comandAnalizerService.cocinarComand('bienvenido');\n      //   }, 700);\n      // }\n      // -----------------> ACTIVAR MOZO VIRTUAL\n\n      // para que reconecte, porque al iniciar no conecta si viene delivery codigo qr\n      if (this.verifyClientService.getIsDelivery() && this.verifyClientService.getIsQrSuccess()) {\n        this.socketService.isSocketOpen = false;\n      }\n    });\n\n    this.listenStatusService.isBusqueda$.subscribe(res => {\n      this.isBusqueda = res;\n    });\n\n    this.listenStatusService.hayCuentaBusqueda$.subscribe(res => {\n      this.isHayCuentaBusqueda = res;\n    });\n\n    this.listenStatusService.isPagePagarCuentaShow$.subscribe(res => {\n      this.isPagePagarShow = res;\n    });\n\n    this.listenStatusService.isFinishLoaderSendPedido$.subscribe((isOpen: boolean) => {\n      if ( isOpen === true && !this.isUsuarioCliente ) {\n        setTimeout(() => {\n          this.closeMsjLoaderPedido();\n        }, 1600);\n      }\n    });\n\n    // this.listenStatusService.callClienteSolicitaAtencion$.subscribe(res => {\n\n    // });\n\n    this.navigatorService.resNavigatorSourceObserve$.subscribe((res: any) => {\n      switch (res.pageActive) {\n        case 'carta':\n          this.selectedTab = 0;\n          this.resetObjCuenta();\n          // console.log(this.selectedTab);\n          break;\n        case 'estado':\n          this.selectedTab = 2;\n          break;\n        case 'mipedido':\n          this.selectedTab = 1;\n          break;\n        case 'mesas':\n          // console.log('llegamos a mesas');\n          this.listenStatusService.setshowLoadListMesas();\n          // appListMesas.loadListMesas();\n          break;\n      }\n\n      // if (res.pageActive === 'carta') {\n      //   this.selectedTab = 0;\n      //   this.resetObjCuenta();\n      //   console.log(this.selectedTab);\n      // }\n\n    });\n\n    this.miPedidoService.countItemsObserve$.subscribe((res) => {\n      this.countTotalItems = res;\n      this.importeTotalProductos = this.miPedidoService.getSubTotalMiPedido();\n    });\n\n    this.listenStatusService.isLoaderCarta$.subscribe(res => {\n      this.loaderPage = res;\n      if ( this.loaderPage ) {\n        this.verificarLoaderReload();\n      } else {\n        clearTimeout(this.timeLoader);\n      }\n    });\n\n    // if ( this.socketService.isSocketOpen ) {\n    //   this.socketService.connect();\n    //   this.socketService.onGetClienteLlama().subscribe(res => {\n    //     console.log('cliente llama', res);\n    //   });\n    // }\n\n    // this.tooltip.show();\n    // setTimeout(() => {\n    //   // this._matTooltip.position = 'below';\n    //   // this._matTooltip.tooltipClass = 'example-tooltip-red-1';\n    //   this._matTooltip.show();\n    // }, 1000);\n\n\n    // setTimeout(() => {\n    //   this.comandAnalizerService.cocinarComand('bienvenido');\n    // }, 500);\n\n  }\n\n  // 12 segundos de cargar, reload page\n  private verificarLoaderReload() {\n    this.timeLoader = setTimeout(() => {\n      if ( this.loaderPage ) {\n        window.location.reload();\n      }\n    }, 12000);\n  }\n\n  onScroll($event: any): void {\n    const val = $event.srcElement.scrollTop;\n    this.isVisibleToolBar = val >= this.lastValScrollTop && val > 0 ? false : true;\n\n    setTimeout(() => {\n      this.lastValScrollTop = val;\n    }, 100);\n  }\n\n  clickTab($event: any) {\n\n\n\n    // console.log('event tab', $event);\n    this.selectedTab = $event.index;\n\n    // if ( this.selectedTab === 1 && !this.isScreenIsMobile ) {return false; }\n\n    const _pageActive = $event.tab.textLabel.toLowerCase();\n    this.navigatorService.setPageActive(_pageActive);\n    // $event.srcElement.scrollTop = 0;\n    this.isVisibleToolBar = true;\n    // this.navigatorService.restorePage(_pageActive);\n  }\n\n  private resetObjCuenta(): void {\n    if ( !this.isHayCuentaBusqueda ) { return; }\n    this.miPedidoService.resetObjMiPedido();\n    this.listenStatusService.setHayCuentaBuesqueda(false);\n  }\n\n  goListaProductos() {\n    const _tabList = {\n      index: 1,\n      tab: {\n        isActive: true,\n        origin: 1,\n        position: 0,\n        textLabel: 'MiPedido'\n      }\n    };\n\n    this.clickTab(_tabList);\n  }\n\n  pruebaMsjs() {\n\n    this.listenStatusService.setIsFinishLoaderSendPedidoSource(true);\n\n  }\n\n  closeMsjLoaderPedido() {\n    // this.listenStatusService.setIsFinishLoaderSendPedidoSource(false);\n    // this.listenStatusService.setLoaderSendPedido(false);\n\n    this.listenStatusService.closeFinishLoaderSendPedidoSource();\n  }\n\n  goBackCarta() {\n    this.listenStatusService.setListenGoCarta();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { ComponentesModule } from 'src/app/componentes/componentes.module';\n\nimport { MainComponent } from './main/main.component';\nimport { InicioComponent } from './inicio/inicio.component';\nimport { CartaComponent } from './carta/carta.component';\nimport { ResumenPedidoComponent } from './resumen-pedido/resumen-pedido.component';\nimport { EstadoPedidoComponent } from './estado-pedido/estado-pedido.component';\nimport { BuscarItemComponent } from './buscar-item/buscar-item.component';\nimport { PedidoRoutingModule } from './pedido.routing';\nimport { CoreModule } from 'src/app/core/core.module';\n\n// import { DialogItemComponent } from './resumen-pedido/dialog-item/dialog-item.component';\nimport { BusquedaComponent } from './busqueda/busqueda.component';\n// import { DialogSubitemRemoveComponent } from './resumen-pedido/dialog-subitem-remove/dialog-subitem-remove.component';\n\nimport { DialogResetComponent } from './resumen-pedido/dialog-reset/dialog-reset.component';\nimport { DialogLoadingComponent } from './resumen-pedido/dialog-loading/dialog-loading.component';\nimport { DialogItemEditComponent } from 'src/app/componentes/dialog-item-edit/dialog-item-edit.component';\nimport { DialogVerificarTelefonoComponent } from 'src/app/componentes/dialog-verificar-telefono/dialog-verificar-telefono.component';\n// import { DialogSelectDireccionComponent } from 'src/app/componentes/dialog-select-direccion/dialog-select-direccion.component';\n// import { DialogMetodoPagoComponent } from 'src/app/componentes/dialog-metodo-pago/dialog-metodo-pago.component';\n// import { PagarCuentaComponent } from './pagar-cuenta/pagar-cuenta.component';\n\n\n\n@NgModule({\n  declarations: [\n    MainComponent,\n    InicioComponent,\n    CartaComponent,\n    ResumenPedidoComponent,\n    EstadoPedidoComponent,\n    BuscarItemComponent,\n    // DialogItemComponent,\n    DialogResetComponent,\n    DialogLoadingComponent,\n    // DialogSubitemRemoveComponent,\n    DialogItemEditComponent,\n    BusquedaComponent,\n    // DialogSelectDireccionComponent\n    // PagarCuentaComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    PedidoRoutingModule,\n    CoreModule,\n    ComponentesModule\n  ],\n  exports: [\n    // DialogItemComponent,\n    DialogResetComponent,\n    DialogLoadingComponent,\n    DialogItemEditComponent\n  ],\n  // entryComponents: [\n  //   DialogResetComponent,\n  //   DialogLoadingComponent,\n  //   DialogItemEditComponent,\n  //   DialogVerificarTelefonoComponent,\n  //   // DialogSelectDireccionComponent\n\n  //   // DialogMetodoPagoComponent\n  // ]\n})\nexport class PedidoModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MainComponent } from './main/main.component';\r\nimport { InicioComponent } from './inicio/inicio.component';\r\nimport { CartaComponent } from './carta/carta.component';\r\nimport { BusquedaComponent } from './busqueda/busqueda.component';\r\n// import { PagarCuentaComponent } from './pagar-cuenta/pagar-cuenta.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n    path: '', component: MainComponent,\r\n    data: { titulo: 'Pedido' },\r\n    children: [\r\n        // {\r\n        //     path: '', redirectTo: 'inicio/1', pathMatch: 'full'\r\n        // },\r\n        // {\r\n        //     path: 'inicio/:id',\r\n        //     component: InicioComponent,\r\n        //     data: { titulo: 'Inicio' }\r\n        // },\r\n        {\r\n            path: 'lacarta/:id',\r\n            component: CartaComponent,\r\n            data: { titulo: 'Carta' }\r\n        },\r\n        // {\r\n        //     path: 'pagar-cuenta',\r\n        //     component: PagarCuentaComponent,\r\n        //     data: { titulo: 'Pagar' }\r\n        // },\r\n        // {\r\n        //     path: 'busqueda',\r\n        //     component: BusquedaComponent,\r\n        //     data: { titulo: 'Buscar' }\r\n        // },\r\n        // // {\r\n        //     path: 'resumen',\r\n        //     component: ResumenPedidoComponent,\r\n        //     data: { titulo: 'Resumen' }\r\n        // }\r\n    ]\r\n}];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class PedidoRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog-loading',\n  templateUrl: './dialog-loading.component.html',\n  styleUrls: ['./dialog-loading.component.css']\n})\nexport class DialogLoadingComponent implements OnInit {\n\n  isSusccess = false;\n  constructor(\n    private dialogRef: MatDialogRef<DialogLoadingComponent>\n    ) {\n    }\n\n  ngOnInit() {\n    setTimeout(() => {\n      // this.dialogRef.close();\n      this.isSusccess = true;\n      setTimeout(() => {\n        // this.isSusccess = false;\n        this.dialogRef.close();\n      }, 1500);\n    }, 1500);\n  }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { MipedidoService } from 'src/app/shared/services/mipedido.service';\r\nimport { ReglascartaService } from 'src/app/shared/services/reglascarta.service';\r\nimport { PedidoModel } from 'src/app/modelos/pedido.model';\r\nimport { SocketService } from 'src/app/shared/services/socket.service';\r\nimport { JsonPrintService } from 'src/app/shared/services/json-print.service';\r\nimport { NavigatorLinkService } from 'src/app/shared/services/navigator-link.service';\r\nimport { CrudHttpService } from 'src/app/shared/services/crud-http.service';\r\nimport { InfoTockenService } from 'src/app/shared/services/info-token.service';\r\nimport { ListenStatusService } from 'src/app/shared/services/listen-status.service';\r\nimport { RegistrarPagoService } from 'src/app/shared/services/registrar-pago.service';\r\n\r\n\r\nimport { SeccionModel } from 'src/app/modelos/seccion.model';\r\nimport { ItemModel } from 'src/app/modelos/item.model';\r\nimport { TipoConsumoModel } from 'src/app/modelos/tipoconsumo.model';\r\nimport { FormValidRptModel } from 'src/app/modelos/from.valid.rpt.model';\r\nimport { ItemTipoConsumoModel } from 'src/app/modelos/item.tipoconsumo.model';\r\nimport { SubItemsView } from 'src/app/modelos/subitems.view.model';\r\n\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\n\r\nimport { DialogLoadingComponent } from './dialog-loading/dialog-loading.component';\r\nimport { DialogResetComponent } from './dialog-reset/dialog-reset.component';\r\nimport { DialogItemEditComponent } from 'src/app/componentes/dialog-item-edit/dialog-item-edit.component';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\nimport { takeUntil, take, last, takeLast } from 'rxjs/operators';\r\nimport { EstadoPedidoClienteService } from 'src/app/shared/services/estado-pedido-cliente.service';\r\n// import { throwToolbarMixedModesError } from '@angular/material/toolbar';\r\nimport { Router } from '@angular/router';\r\nimport { EstablecimientoService } from 'src/app/shared/services/establecimiento.service';\r\nimport { UtilitariosService } from 'src/app/shared/services/utilitarios.service';\r\nimport { VerifyAuthClientService } from 'src/app/shared/services/verify-auth-client.service';\r\nimport { SpeechDataProviderService } from 'src/app/shared/services/speech/speech-data-provider.service';\r\n// import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n// import { Subscription } from 'rxjs/internal/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-resumen-pedido',\r\n  templateUrl: './resumen-pedido.component.html',\r\n  styleUrls: ['./resumen-pedido.component.css']\r\n})\r\nexport class ResumenPedidoComponent implements OnInit, OnDestroy {\r\n\r\n  // private unsubscribeRe = new Subscription();\r\n  private destroy$: Subject<boolean> = new Subject<boolean>();\r\n\r\n  _miPedido: PedidoModel = new PedidoModel();\r\n  _arrSubtotales: any = [];\r\n  hayItems = false;\r\n  isVisibleConfirmar = false;\r\n  isVisibleConfirmarAnimated = false;\r\n  isHayCuentaBusqueda: boolean;\r\n  numMesaCuenta = '';\r\n  rulesCarta: any;\r\n  rulesSubtoTales: any;\r\n\r\n  msjErr = false;\r\n\r\n  isReserva = false;\r\n  isRequiereMesa = false;\r\n  isDelivery = false;\r\n  isDeliveryValid = false;\r\n  frmConfirma: any = {};\r\n  frmDelivery: any = {};\r\n  frmReservaCliente: any = {};\r\n\r\n  arrReqFrm: FormValidRptModel;\r\n\r\n  rippleColor = 'rgb(255,238,88, 0.5)';\r\n  rippleColorSubItem = 'rgba(117,117,117,0.1)';\r\n\r\n  loadPrinterPrecuenta = false; // si se mando a imprimir precuenta\r\n\r\n  objCuenta: any = [];\r\n\r\n  isCliente: boolean; // si es cliente quien hace el pedido\r\n  isSoloLLevar: boolean; // si es solo llevar\r\n  isDeliveryCliente: boolean; // si es cliente delivery\r\n  isReservaCliente: boolean; // si es cliente delivery\r\n  isReadyClienteDelivery = false; // si el formulario(confirmacion) clienteDelivery esta listo\r\n  isReadyClienteReserva = false; // si el formulario(confirmacion) reserva esta listo\r\n  isReloadListPedidos = false;\r\n  isPuntoAuntoPedido: boolean; // si es cliente quien hace el pedido\r\n\r\n  private isFirstLoadListen = false; // si es la primera vez que se carga, para no volver a cargar los observables\r\n\r\n  private isBtnPagoShow = false; // si el boton de pago ha sido visible entonces recarga la pagina de pago\r\n\r\n  private systemOS = ''; // sistema operativo cliente\r\n\r\n  nombreClienteValido = false; // cuando es cliente e ingresa como invitado pide nombre\r\n  isShowNombreClienteLoginInvitado = false;\r\n  showCuentaCliente = false;\r\n\r\n  private isSavingPedido = false;\r\n\r\n  constructor(\r\n    private miPedidoService: MipedidoService,\r\n    private reglasCartaService: ReglascartaService,\r\n    private navigatorService: NavigatorLinkService,\r\n    private socketService: SocketService,\r\n    private jsonPrintService: JsonPrintService,\r\n    private infoToken: InfoTockenService,\r\n    private crudService: CrudHttpService,\r\n    private listenStatusService: ListenStatusService,\r\n    private estadoPedidoClientService: EstadoPedidoClienteService,\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private registrarPagoService: RegistrarPagoService,\r\n    private establecimientoService: EstablecimientoService,\r\n    private utilService: UtilitariosService,\r\n    private verifyClientService: VerifyAuthClientService,\r\n    private speechDataProviderService: SpeechDataProviderService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // this.establecimientoService.get();\r\n\r\n    this.systemOS = this.utilService.getOS();\r\n\r\n    this._miPedido = this.miPedidoService.getMiPedido();\r\n\r\n    this.isPuntoAuntoPedido = this.infoToken.isPuntoAutoPedido();\r\n\r\n    // console.log('this.infoToken', this.infoToken);\r\n\r\n    this.validarNomhbreCliente();\r\n\r\n    // this.verificarConexionSocket();\r\n\r\n    // console.log('si es invitado');\r\n    // this.isShowNombreClienteLoginInvitado = this.verifyClientService.getDataClient().isLoginByInvitado;\r\n    // if ( this.isShowNombreClienteLoginInvitado || this.isPuntoAuntoPedido ) {\r\n    //   let nomClienteInvitato = this.infoToken.infoUsToken.nombres;\r\n\r\n    //   if ( this.isPuntoAuntoPedido ) {\r\n    //     nomClienteInvitato = '';\r\n    //   }\r\n\r\n    //   nomClienteInvitato = nomClienteInvitato.toLocaleLowerCase().indexOf('invitado') > -1 ? '' : nomClienteInvitato;\r\n    //   this.isShowNombreClienteLoginInvitado = nomClienteInvitato === '';\r\n    //   this.nombreClienteValido = !this.isShowNombreClienteLoginInvitado;\r\n    // } else {\r\n    //   let nomClienteInvitato = this.infoToken.infoUsToken.nombres;\r\n    //   nomClienteInvitato = nomClienteInvitato.toLocaleLowerCase().indexOf('invitado') > -1 ? '' : nomClienteInvitato;\r\n    //   this.nombreClienteValido = nomClienteInvitato !== '';\r\n    // }\r\n\r\n    this.reglasCartaService.loadReglasCarta()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((res: any) => {\r\n      this.rulesCarta = res[0] ? res[0].reglas ? res[0].reglas : [] : res.reglas ? res.reglas : [];\r\n      this.rulesSubtoTales = res.subtotales || res[0].subtotales;\r\n\r\n      this.establecimientoService.setRulesSubtotales(this.rulesSubtoTales);\r\n\r\n\r\n      this.listenMiPedido();\r\n\r\n      this.newFomrConfirma();\r\n\r\n      // this.frmDelivery = new DatosDeliveryModel();\r\n    });\r\n\r\n    // this.navigatorService.resNavigatorSourceObserve$\r\n    // .pipe(takeUntil(this.destroy$))\r\n    // .subscribe((res: any) => {\r\n    //       if (res.pageActive === 'mipedido') {\r\n    //         if (res.url.indexOf('confirma') > 0) {\r\n    //           // this.confirmarPeiddo();\r\n\r\n    //         } else {\r\n    //           // this.backConfirmacion();\r\n    //         }\r\n    //       }\r\n    //     });\r\n\r\n    this.listenStatusService.isBtnPagoShow$\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe((res: boolean) => {\r\n          this.isBtnPagoShow = res;\r\n          if (!res) {\r\n            const localBtnP = localStorage.getItem('sys::btnP');\r\n            if ( localBtnP && localBtnP.toString() === '1' ) {\r\n              this.isBtnPagoShow = true;\r\n             }\r\n          }\r\n        });\r\n\r\n    // speech data finaliza pedido\r\n    this.speechDataProviderService.commandFinalizarPedido$\r\n    .pipe(takeUntil(this.destroy$))\r\n    .subscribe((res: boolean) => {\r\n      if (res) {\r\n        // this.confirmarPeiddo();        \r\n        this.isVisibleConfirmarAnimated = true;\r\n\r\n        setTimeout(() => {\r\n          this.isVisibleConfirmar = true;\r\n        }, 300);\r\n\r\n        this.checkTiposDeConsumo();\r\n        this.checkIsRequierMesa();\r\n        this.checkIsDelivery();\r\n\r\n        this.navigatorService.addLink('mipedido-confirma');\r\n\r\n        this.isClienteSetValues();\r\n      }\r\n    });\r\n\r\n    // speech show pedido\r\n    this.speechDataProviderService.commandIsShowPedido$\r\n    .pipe(takeUntil(this.destroy$))\r\n    .subscribe((res: boolean) => {\r\n      if (res) {\r\n        // this.backConfirmacion();\r\n        this.isVisibleConfirmarAnimated = false;\r\n        this.isRequiereMesa = false;\r\n        setTimeout(() => {\r\n          this.isVisibleConfirmar = false;\r\n        }, 300);\r\n      }\r\n    });\r\n\r\n\r\n    // si es cliente\r\n    this.isCliente = this.infoToken.isCliente();\r\n    this.isSoloLLevar = this.infoToken.isSoloLlevar();\r\n    this.isDeliveryCliente = this.infoToken.isDelivery();\r\n    this.isReservaCliente = this.infoToken.isReserva();\r\n    this.isClienteSetValues();\r\n\r\n\r\n  }\r\n\r\n  // si es cliente asigna mesa\r\n  private isClienteSetValues(): void {\r\n    if ( this.isCliente ) {\r\n      this.isRequiereMesa = false;\r\n    }\r\n  }\r\n\r\n  private validarNomhbreCliente(): void {\r\n    this.isShowNombreClienteLoginInvitado = this.verifyClientService.getDataClient().isLoginByInvitado;\r\n    if ( this.isShowNombreClienteLoginInvitado || this.isPuntoAuntoPedido ) {\r\n      let nomClienteInvitato = this.infoToken.infoUsToken.nombres;\r\n\r\n      if ( this.isPuntoAuntoPedido ) {\r\n        nomClienteInvitato = '';\r\n        this.infoToken.infoUsToken.nombres = '';\r\n        this.infoToken.set();\r\n      }\r\n\r\n      nomClienteInvitato = nomClienteInvitato.toLocaleLowerCase().indexOf('invitado') > -1 ? '' : nomClienteInvitato;\r\n      this.isShowNombreClienteLoginInvitado = nomClienteInvitato === '';\r\n      this.nombreClienteValido = !this.isShowNombreClienteLoginInvitado;\r\n    } else {\r\n      let nomClienteInvitato = this.infoToken.infoUsToken.nombres;\r\n      nomClienteInvitato = nomClienteInvitato ? nomClienteInvitato.toLocaleLowerCase().indexOf('invitado') > -1 ? '' : nomClienteInvitato : '';\r\n      this.nombreClienteValido = nomClienteInvitato !== '';\r\n    }\r\n    // console.log('this.nombreClienteValido', this.nombreClienteValido);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // this.unsubscribe$.next();\r\n    // this.unsubscribe$.complete();\r\n    // this.unsubscribeRe.unsubscribe();\r\n    // Now let's also unsubscribe from the subject itself:\r\n    this.destroy$.next(true);\r\n    this.destroy$.unsubscribe();\r\n  }\r\n\r\n  private newFomrConfirma(): void {\r\n    this.frmConfirma = {\r\n      nummesa: '',\r\n      nummesa_resplado: '',\r\n      referencia: '',\r\n      reserva: false,\r\n      solo_llevar: false,\r\n      delivery: false\r\n    };\r\n\r\n    // traer los ultimos datos de comisiones\r\n    this.establecimientoService.getComsionEntrega();\r\n\r\n    if ( this.isPuntoAuntoPedido ) {\r\n      // se coloca vacio para asignar nuevo nombre\r\n      this.validarNomhbreCliente();\r\n    }\r\n  }\r\n\r\n  pintarMiPedido() {\r\n    this.isReloadListPedidos = true;\r\n\r\n    if (!this.isHayCuentaBusqueda) {\r\n      this.miPedidoService.validarReglasCarta(this.rulesCarta);\r\n    }\r\n\r\n\r\n    this._arrSubtotales = this.miPedidoService.getArrSubTotales(this.rulesSubtoTales);\r\n    localStorage.setItem('sys::st', btoa(JSON.stringify(this._arrSubtotales)));\r\n    this.hayItems = parseFloat(this._arrSubtotales[0].importe) > 0 ? true : false;\r\n\r\n    setTimeout(() => {\r\n      this.isReloadListPedidos = false;\r\n    }, 1000);\r\n\r\n    // console.log('_arrSubtotales', this._arrSubtotales);\r\n\r\n  }\r\n\r\n  pintarMiPedidoNuevamente() {\r\n    this.isReloadListPedidos = true;\r\n    if ( !this.rulesCarta ) {\r\n      window.location.reload();\r\n      return;\r\n    }\r\n\r\n    this.pintarMiPedido();\r\n  }\r\n\r\n  listenMiPedido() {\r\n    // 090121 // comentamos estas lineas para corregir error de \"Aun no tiene ningun producto en lista\"\r\n    // if ( this.isFirstLoadListen ) {return; }\r\n    // this.isFirstLoadListen = true; // para que no vuelva a cargar los observables cuando actualizan desde sockets\r\n\r\n\r\n    this.miPedidoService.countItemsObserve$\r\n    .pipe(takeUntil(this.destroy$))\r\n    .subscribe((res) => {\r\n      this.hayItems = res > 0 ? true : false;\r\n    });\r\n\r\n    // .pipe(last())\r\n    this.miPedidoService.miPedidoObserver$\r\n    .pipe(takeUntil(this.destroy$))\r\n    .subscribe((res) => {\r\n      // this.miPedidoService.clearObjMiPedido(); // quita las cantidades 0\r\n      // this._miPedido = this.miPedidoService.getMiPedido();\r\n      this._miPedido = <PedidoModel>res;\r\n      this.pintarMiPedido();\r\n\r\n    });\r\n\r\n    this.listenStatusService.hayCuentaBusqueda$\r\n    .pipe(takeUntil(this.destroy$))\r\n    .subscribe(res => {\r\n      this.isHayCuentaBusqueda = res;\r\n    });\r\n\r\n    // cuando es solo llevar // estar pendiente de pago suscces para enviar el pedido\r\n    this.listenStatusService.isPagoSucces$\r\n    .pipe(takeUntil(this.destroy$))\r\n    .subscribe(res => {\r\n      if ( !res ) {return; }\r\n      // toma la respuesta de pago\r\n      // const resPago = JSON.parse(localStorage.getItem('sys::transaction-response'));\r\n      // const resPagoIsSucces = resPago ? !resPago.error : false;\r\n      const resPago = this.registrarPagoService.getDataTrasaction();\r\n      if (resPago.isSuccess && this.isSoloLLevar) {\r\n        // localStorage.removeItem('sys::transaction-response');\r\n        this.registrarPagoService.removeLocalDataTransaction();\r\n        this.enviarPedido();\r\n      }\r\n    });\r\n\r\n    this.socketService.isSocketOpen$\r\n    .pipe(takeUntil(this.destroy$))\r\n    .subscribe(res => {\r\n      if (!res) {\r\n\r\n        // this.unsubscribeRe.unsubscribe();\r\n      }\r\n    });\r\n\r\n\r\n    // si es cliente escucha cunado termina de hacer el pedido\r\n    if ( this.isCliente ) {\r\n      this.socketService.onGetNuevoPedido()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(res => {\r\n        // this.estadoPedidoClientService.getCuentaTotales();\r\n        // this.xLoadCuentaMesa('', this.estadoPedidoClientService.getCuenta());\r\n        // this.estadoPedidoClientService.setImporte(this._arrSubtotales[this._arrSubtotales.length - 1].importe);\r\n      });\r\n    }\r\n\r\n    // escucha que haya cuenta del cliente\r\n    this.estadoPedidoClientService.hayCuentaCliente$\r\n    .pipe(takeUntil(this.destroy$))\r\n    .subscribe((res: any) => {\r\n      if ( res ) {\r\n\r\n        this.showCuentaCliente = true;\r\n        this.xLoadCuentaMesa('', res);\r\n      }\r\n    });\r\n\r\n\r\n    // escucha isOutEstablecimientoDelivery\r\n    this.listenStatusService.isOutEstablecimientoDelivery$\r\n    .pipe(takeUntil(this.destroy$))\r\n    .subscribe((res: any) => {\r\n      if ( res ) {\r\n        this.goBackOutEstablecimiento();\r\n        this.listenStatusService.setIsOutEstablecimientoDelivery(false);\r\n      }\r\n    });\r\n\r\n    // ver la cuenta de mesa desde afuera\r\n    this.listenStatusService.showCuentaMesaNumero$\r\n    .pipe(takeUntil(this.destroy$))\r\n    .subscribe((numMesa: number) => {\r\n      if ( numMesa !== 0 ) {\r\n        this.xLoadCuentaMesa(numMesa.toString());\r\n      }\r\n    });\r\n  }\r\n\r\n  addItemToResumen(_tpc: ItemTipoConsumoModel, _seccion: SeccionModel, _item: ItemModel, _subItems: SubItemsView, suma: number): void {\r\n\r\n    this.miPedidoService.setObjSeccionSeleced(_seccion);\r\n    const _itemFromCarta = this.miPedidoService.findItemCarta(_item);\r\n\r\n    // obtenemos el tipo consumo de carta\r\n    const _tpc_item_carta = _itemFromCarta.itemtiposconsumo.filter((x: ItemTipoConsumoModel) => x.idtipo_consumo === _tpc.idtipo_consumo)[0];\r\n\r\n    // this.miPedidoService.setobjItemTipoConsumoSelected( _itemInList.itemtiposconsumo);\r\n    _itemFromCarta.subitems_selected = _subItems.subitems;\r\n    _itemFromCarta.cantidad_seleccionada = _item.cantidad_seleccionada;\r\n\r\n    this.miPedidoService.addItem2(_tpc_item_carta, _itemFromCarta, suma);\r\n\r\n  }\r\n\r\n  openDlgItemToResumen(_seccion: SeccionModel, _item: ItemModel): void {\r\n\r\n    if ( this.isHayCuentaBusqueda ) { return; }\r\n\r\n    const dialogConfig = new MatDialogConfig();\r\n    const _itemFromCarta = this.miPedidoService.findItemCarta(_item);\r\n    _itemFromCarta.indicaciones = _itemFromCarta.indicaciones ? _itemFromCarta.indicaciones :  _item.indicaciones || '';\r\n\r\n    // dialogConfig.panelClass = 'dialog-item-edit';\r\n    dialogConfig.autoFocus = false;\r\n    dialogConfig.data = {\r\n      idTpcItemResumenSelect: null,\r\n      seccion: _seccion,\r\n      item: _itemFromCarta,\r\n      objItemTipoConsumoSelected: _itemFromCarta.itemtiposconsumo\r\n    };\r\n    dialogConfig.panelClass =  ['my-dialog-orden-detalle', 'margen-0', 'margen-0'];\r\n\r\n    const dialogRef = this.dialog.open(DialogItemEditComponent, dialogConfig);\r\n\r\n    // subscribe al cierre y obtiene los datos\r\n    dialogRef.afterClosed().subscribe(\r\n        data => {\r\n          if ( !data ) { return; }\r\n\r\n        }\r\n    );\r\n\r\n  }\r\n\r\n  nuevoPedido() {\r\n    this.backConfirmacion();\r\n    if (this.isVisibleConfirmar) {\r\n      this.backConfirmacion();\r\n      // this.isVisibleConfirmarAnimated = false;\r\n      // setTimeout(() => {\r\n      //   this.isVisibleConfirmar = false;\r\n      // }, 300);\r\n      return;\r\n    }\r\n\r\n    const _dialogConfig = new MatDialogConfig();\r\n    _dialogConfig.disableClose = true;\r\n    _dialogConfig.hasBackdrop = true;\r\n\r\n    const dialogReset = this.dialog.open(DialogResetComponent, _dialogConfig);\r\n    dialogReset.afterClosed().subscribe(result => {\r\n      if (result ) {\r\n        // enviamos this._miPedido esta visa no se modifica\r\n        this.miPedidoService.resetAllNewPedido();\r\n        this.navigatorService.setPageActive('carta');\r\n        this.isDeliveryValid = false; // formulario no valido para delivery\r\n      }\r\n    });\r\n\r\n    this.newFomrConfirma();\r\n  }\r\n\r\n  nuevoPedidoFromCuenta(): void {\r\n    this.navigatorService.setPageActive('carta');\r\n  }\r\n\r\n  private backConfirmacion(): void {\r\n    this.navigatorService.addLink('mipedido');\r\n    this.isVisibleConfirmarAnimated = false;\r\n    this.isRequiereMesa = false;\r\n    setTimeout(() => {\r\n      this.isVisibleConfirmar = false;\r\n    }, 300);\r\n  }\r\n\r\n  getDatosFormConfirmaDelivery($event: any) {\r\n    this.frmDelivery = $event;\r\n  }\r\n\r\n  getDatosFormConfirmaReserva($event: any) {\r\n    this.frmReservaCliente = $event.formData;\r\n\r\n    const _frmConfirma = {\r\n      nummesa: '',\r\n      nummesa_resplado: '',\r\n      referencia: this.frmReservaCliente.nombre_reserva + ' ' + this.frmReservaCliente.empresa + ' ' + this.frmReservaCliente.hora_reserva,\r\n      reserva: true,\r\n      solo_llevar: false,\r\n      delivery: false\r\n    };\r\n\r\n    this.frmConfirma = _frmConfirma;\r\n  }\r\n\r\n  private confirmarPeiddo(): void {\r\n    if (this.isVisibleConfirmarAnimated ) { // enviar pedido\r\n      if (this.isRequiereMesa || !this.isDeliveryValid ) {\r\n\r\n        // si el pago del delivery es en efectivo procesa pago\r\n        if ( this.infoToken.infoUsToken.metodoPago.idtipo_pago === 1 && this.isDeliveryValid) {\r\n          this.prepararEnvio();\r\n        }\r\n        return;\r\n      }\r\n\r\n      this.prepararEnvio();\r\n    } else {\r\n\r\n      this.isVisibleConfirmar = true;\r\n      this.isVisibleConfirmarAnimated = true;\r\n\r\n      this.checkTiposDeConsumo();\r\n      this.checkIsRequierMesa();\r\n      this.checkIsDelivery();\r\n\r\n      this.navigatorService.addLink('mipedido-confirma');\r\n\r\n      this.isClienteSetValues();\r\n    }\r\n  }\r\n\r\n  private prepararEnvio(): void {\r\n    if ( !this.isDeliveryCliente) {\r\n      this.showLoaderPedido();\r\n      // const _dialogConfig = new MatDialogConfig();\r\n      // _dialogConfig.disableClose = true;\r\n      // _dialogConfig.hasBackdrop = true;\r\n\r\n      // const dialogLoading = this.dialog.open(DialogLoadingComponent, _dialogConfig);\r\n      // dialogLoading.afterClosed().subscribe(result => {\r\n      //   this.enviarPedido();\r\n      // });\r\n    } else {\r\n      // si es delivery y paga en efectivo o yape envia de\r\n      // 1 efectivo 2 tarjeta 3 yape\r\n      if ( this.infoToken.infoUsToken.metodoPago.idtipo_pago !== 2 ) {\r\n        this.showLoaderPedido();\r\n      } else {\r\n        this.enviarPedido();\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  private showLoaderPedido(): void {\r\n    this.listenStatusService.setLoaderSendPedido(true);\r\n\r\n    if ( this.isSavingPedido ) { return; }\r\n    this.isSavingPedido = true;\r\n\r\n\r\n    // seteamos el metodo pago que el cliente selecciona\r\n    this.infoToken.setMetodoPagoSelected(this.infoToken.infoUsToken.metodoPago);\r\n\r\n    setTimeout(() => {\r\n      this.enviarPedido();\r\n    }, 1400);\r\n\r\n    // const _dialogConfig = new MatDialogConfig();\r\n    // _dialogConfig.hasBackdrop = true;\r\n    // _dialogConfig.disableClose = true;\r\n\r\n    // const dialogLoading = this.dialog.open(DialogLoadingComponent, _dialogConfig);\r\n    // dialogLoading.afterClosed().subscribe(result => {\r\n    //   this.enviarPedido();\r\n    // });\r\n  }\r\n\r\n  private enviarPedido(): void {\r\n\r\n    // this.verificarConexionSocket();\r\n\r\n    // para asegurar que marque delivery si es\r\n    const isPagoConTarjeta = this.infoToken.getInfoUs().metodoPago.idtipo_pago === 2;\r\n\r\n    this.checkTiposDeConsumo();\r\n\r\n    // get subtotales // si es delivery porque puede que modifique la distancia y modifica el precio // que se va ver en comanda\r\n    // this._arrSubtotales = this.miPedidoService.getArrSubTotales(this.rulesSubtoTales);\r\n\r\n    // seteamos el metodo pago que el cliente selecciona\r\n    this.infoToken.setMetodoPagoSelected(this.infoToken.getInfoUs().metodoPago);\r\n    // this.infoToken.setMetodoPagoSelected(this.infoToken.infoUsToken.metodoPago);\r\n\r\n    // saca del local por que puede que se haya puestro propina\r\n    this._arrSubtotales = JSON.parse(atob(localStorage.getItem('sys::st')));\r\n    localStorage.setItem('sys::st', btoa(JSON.stringify(this._arrSubtotales)));\r\n\r\n    // console.log('this._arrSubtotales', this._arrSubtotales);\r\n\r\n    // usuario o cliente\r\n    const dataUsuario = this.infoToken.getInfoUs();\r\n    // const dataUsuario = this.infoToken.infoUsToken;\r\n\r\n    // console.log('aaaaaaaaaaaa');\r\n\r\n    const dataFrmConfirma: any = {};\r\n    if ( this.isCliente || this.isPuntoAuntoPedido && !this.isReservaCliente) {\r\n      this.frmConfirma.solo_llevar = this.isSoloLLevar ? true : this.frmConfirma.solo_llevar;\r\n      dataFrmConfirma.m = this.isSoloLLevar ? '' : dataUsuario.numMesaLector;\r\n      dataFrmConfirma.m = this.isDeliveryCliente ? '' : dataUsuario.numMesaLector;\r\n      dataFrmConfirma.r = dataUsuario.nombres.toUpperCase();\r\n      dataFrmConfirma.nom_us = dataUsuario.nombres.toUpperCase();\r\n      dataFrmConfirma.m_respaldo = dataFrmConfirma.m;\r\n    } else {\r\n      // dataFrmConfirma.m = this.frmConfirma.mesa ? this.frmConfirma.mesa.toString().padStart(2, '0') || '00' : '00';\r\n      dataFrmConfirma.m_respaldo = this.frmConfirma.nummesa_resplado;\r\n      dataFrmConfirma.m = this.frmConfirma.nummesa ? this.frmConfirma.nummesa : this.arrReqFrm.isRequiereMesa ? this.frmConfirma.nummesa_resplado : '00';\r\n      dataFrmConfirma.r = this.frmConfirma.delivery ? this.frmDelivery.nombre : this.utilService.addslashes(this.frmConfirma.referencia) || '';\r\n      dataFrmConfirma.nom_us = dataUsuario.nombres.split(' ')[0].toUpperCase();\r\n    }\r\n\r\n\r\n    // console.log('bbbbbbbbbbbbbb');\r\n\r\n    // header //\r\n\r\n    // const _subTotalesSave = _p_header.delivery === 1 ? this.frmDelivery.subTotales : this._arrSubtotales;\r\n    // debugger\r\n    // const idPwaPago = this.registrarPagoService.getIdPwaPago();\r\n\r\n\r\n\r\n    const _p_header = {\r\n      m: dataFrmConfirma.m, // this.frmConfirma.mesa ? this.frmConfirma.mesa.toString().padStart(2, '0') || '00' : '00',\r\n      m_respaldo: dataFrmConfirma.m_respaldo,\r\n      r: dataFrmConfirma.r, // this.frmConfirma.referencia || '',\r\n      nom_us: dataFrmConfirma.nom_us, // this.infoToken.getInfoUs().nombres.split(' ')[0].toLowerCase(),\r\n      delivery: this.frmConfirma.delivery || this.isDeliveryCliente ? 1 : 0,\r\n      reservar: this.frmConfirma.reserva ? 1 : 0,\r\n      solo_llevar: this.frmConfirma.solo_llevar ? 1 : 0,\r\n      idcategoria: localStorage.getItem('sys::cat'),\r\n      correlativo_dia: '', // en backend\r\n      num_pedido: '', // en backend\r\n      isCliente: this.isCliente ? 1 : 0,\r\n      isSoloLLevar: this.isSoloLLevar,\r\n      idregistro_pago: 0,\r\n      // idregistro_pago: this.isSoloLLevar ? this.registrarPagoService.getDataTrasaction().idregistro_pago : 0,\r\n      arrDatosDelivery: this.frmDelivery,\r\n      arrDatosReserva: this.frmReservaCliente, // datos de la reserva que hace el cliente\r\n      systemOS: this.systemOS,\r\n      idregistra_scan_qr: this.establecimientoService.getLocalIdScanQr(), // el id del scan register\r\n      is_print_subtotales: this.miPedidoService.objDatosSede.datossede[0].is_print_subtotales,\r\n      isprint_copy_short: this.miPedidoService.objDatosSede.datossede[0].isprint_copy_short,\r\n      isprint_all_short: this.miPedidoService.objDatosSede.datossede[0].isprint_all_short,\r\n      appv: 'v.2z'\r\n    };\r\n\r\n    // console.log('cccccccccccccc');\r\n    // frmDelivery.buscarRepartidor este dato viene de datos-delivery pedido tomado por el mismo comercio // si es cliente de todas maneras busca repartidores\r\n    const isClienteBuscaRepartidores = this.frmDelivery.buscarRepartidor ? this.frmDelivery.buscarRepartidor : this.isDeliveryCliente || false;\r\n    // const _subTotalesSave = _p_header.delivery === 1 ? this.frmDelivery.subTotales : this._arrSubtotales;\r\n    let _subTotalesSave = this._arrSubtotales;\r\n\r\n    // si el importe total es igual a cero hay un error, entonces toma los subtotales de frmDelivery\r\n    if (parseFloat(_subTotalesSave[_subTotalesSave.length - 1].importe) === 0) {\r\n      _subTotalesSave = this.frmDelivery.subTotales;\r\n      this._arrSubtotales = _subTotalesSave;\r\n      localStorage.setItem('sys::st', btoa(JSON.stringify(this._arrSubtotales)));\r\n    }\r\n\r\n    const dataPedido = {\r\n      p_header: _p_header,\r\n      p_body: this._miPedido,\r\n      p_subtotales: _subTotalesSave,\r\n      idpedido: 0 // setea despues de guardar el pedido para enviarlo al socket\r\n    };\r\n\r\n    // console.log('ddddddddddd');\r\n    // console.log('_p_header', _p_header);\r\n\r\n    // enviar a print_server_detalle // para imprimir\r\n    const arrPrint = this.jsonPrintService.enviarMiPedido(this.isCliente);\r\n    const dataPrint: any = [];\r\n    arrPrint.map((x: any) => {\r\n      dataPrint.push({\r\n        Array_enca: _p_header,\r\n        ArraySubTotales: _subTotalesSave,\r\n        ArrayItem: x.arrBodyPrint,\r\n        Array_print: x.arrPrinters\r\n      });\r\n    });\r\n\r\n\r\n\r\n    const _dataUsuarioSend = {\r\n      'idusuario': dataUsuario.idusuario,\r\n      'idcliente': dataUsuario.idcliente,\r\n      'idorg': dataUsuario.idorg,\r\n      'idsede': dataUsuario.idsede,\r\n      'nombres': dataUsuario.nombres,\r\n      'cargo': dataUsuario.cargo,\r\n      'usuario': dataUsuario.usuario\r\n    };\r\n\r\n    const dataSend = {\r\n      dataPedido: dataPedido,\r\n      dataPrint: dataPrint,\r\n      dataUsuario: _dataUsuarioSend,\r\n      isDeliveryAPP: _p_header.delivery === 1 ? true : false, // isClienteBuscaRepartidores, // this.isDeliveryCliente,\r\n      isClienteRecogeLocal: this.infoToken.infoUsToken.pasoRecoger, // indica si el cliente pasa a recoger entonces ya no busca repartidor\r\n      dataDescuento: [], // lista de ids de descuento para restar cantidad num_pedidos\r\n      listPrinters: arrPrint.listPrinters\r\n    };\r\n\r\n\r\n    // console.log('eeeeeeeeeeeeeeeeeeeee');\r\n    // ya no lo envio\r\n    // quitamos el order delivery de los datos del usuario para que no sea mucho el json\r\n    // dataSend.dataUsuario.orderDelivery = '';\r\n    // dataSend.dataUsuario.importeDelivery = '';\r\n\r\n    // this.socketService.emit('printerComanda', dataPrint);\r\n\r\n    // si es clienteDelivery no se emite nada\r\n    // primero confirma el pago y luego guarda pedido y posteriormente el pago\r\n    // guardamos el pedido\r\n\r\n    if ( this.isDeliveryCliente && dataUsuario.metodoPago.idtipo_pago === 2) {\r\n      this.infoToken.setOrderDelivery(JSON.stringify(dataSend), JSON.stringify(_subTotalesSave));\r\n      this.pagarCuentaDeliveryCliente();\r\n      // enviamos a pagar\r\n      return;\r\n    }\r\n\r\n\r\n    // descuentos\r\n    if ( this.infoToken.infoUsToken.isHayDescuento ) {\r\n      const _listDsc = this.miPedidoService.getIdsDescuentos();\r\n      dataSend.dataDescuento = _listDsc;\r\n\r\n    }\r\n\r\n    // registrar el id cliente para consultar luego en mis pedidos\r\n    if ( this.infoToken.infoUsToken.isCliente ) {\r\n      this.infoToken.setIdCliente();\r\n    }\r\n\r\n    // console.log('ffffffffffffffffffff');\r\n\r\n    // enviar a guardar // guarda pedido e imprime comanda\r\n\r\n    // console.log('coonsole.log', dataSend);\r\n    // prioridad socket, por crud demora mucho aveces se queda enviando datos...\r\n    this.savePedidoSocket(dataSend, isPagoConTarjeta, _subTotalesSave);\r\n\r\n    // prioridad guardar por post\r\n    // this.crudService.postFree(JSON.stringify(dataSend), 'pedido', 'registrar-nuevo-pedido', false)\r\n    //     .subscribe((res: any) => {\r\n\r\n    // // // this.socketService.emit('nuevoPedido', dataSend); // !> 150920\r\n    // // this.socketService.emitRes('nuevoPedido', JSON.stringify(dataSend)).subscribe(resSocket => { // prioridad guardar por post\r\n    //   // seteamos el metodo pago que el cliente selecciona\r\n    //   // this.infoToken.setMetodoPagoSelected(_p_header.arrDatosDelivery.metodoPago);\r\n    //   // error\r\n    //   // console.log('recibido la respuesta del servidor', resSocket);\r\n    //   // if ( resSocket === false ) {\r\n    //   if ( !res.success ) {\r\n    //     // si tiene error lo intenta enviar por http\r\n    //     // this.crudService.postFree(JSON.stringify(dataSend), 'pedido', 'registrar-nuevo-pedido', false) // prioridad guardar por post\r\n    //     // .subscribe((res: any) => { // prioridad guardar por post\r\n    //     this.socketService.emitRes('nuevoPedido', JSON.stringify(dataSend)).subscribe(resSocket => {\r\n\r\n    //       // if ( !res.success ) {\r\n    //       if ( resSocket === false ) {\r\n    //         alert('!Ups a ocurrido un error, por favor verifique los datos y vuelve a intentarlo.');\r\n    //         // guardamos el error\r\n    //         const dataError = {\r\n    //           elerror: res.error,\r\n    //           elorigen: 'resumen-pedido'\r\n    //         };\r\n\r\n    //         this.crudService.postFree(dataError, 'error', 'set-error', false)\r\n    //         .subscribe(resp => console.log(resp));\r\n\r\n    //         this.listenStatusService.setLoaderSendPedido(false);\r\n    //         return;\r\n    //       }\r\n\r\n    //       setTimeout(() => {\r\n    //         this.listenStatusService.setLoaderSendPedido(false);\r\n    //         this.miPedidoService.stopTimerLimit();\r\n    //         this.miPedidoService.prepareNewPedido();\r\n    //       }, 600);\r\n    //       // post\r\n    //       // dataSend.dataPedido.idpedido = res.data[0].idpedido;\r\n    //       // dataSend.dataPrint = res.data[0].data;\r\n    //       // this.socketService.emit('nuevoPedido2', dataSend);\r\n\r\n    //       // socket\r\n    //       const _res = resSocket[0];\r\n    //       dataSend.dataPedido.idpedido = _res.idpedido;\r\n    //       dataSend.dataPrint = _res.data[1] ? _res.data[1]?.print : null;\r\n\r\n    //       this.newFomrConfirma();\r\n    //       // this.backConfirmacion();\r\n\r\n    //       // hora del pedido\r\n    //       this.estadoPedidoClientService.setHoraInitPedido(new Date().getTime());\r\n\r\n    //       // this.miPedidoService.prepareNewPedido();\r\n\r\n    //       // this.miPedidoService.prepareNewPedido();\r\n\r\n    //       // si es delivery y el pago es en efectivo o en yape, notificamos transaccion conforme\r\n    //       // if ( this.isDeliveryCliente && dataUsuario.metodoPago.idtipo_pago !== 2) {\r\n    //       // if ( this.isDeliveryCliente && _p_header.arrDatosDelivery.metodoPago.idtipo_pago !== 2) {\r\n    //         // if ( this.isDeliveryCliente && this.infoToken.infoUsToken.metodoPago.idtipo_pago !== 2) {\r\n    //       if ( this.isDeliveryCliente && !isPagoConTarjeta) {\r\n    //         this.infoToken.setOrderDelivery(JSON.stringify(dataSend), JSON.stringify(_subTotalesSave));\r\n    //         this.confirmarPedidoDeliveryEnviado();\r\n\r\n    //         // this.pagarCuentaDeliveryCliente();\r\n    //         // enviamos a pagar\r\n    //         return;\r\n    //       }\r\n\r\n    //       if ( this.isReservaCliente ) {\r\n    //         this.confirmarPedidoDeliveryEnviado();\r\n    //         return;\r\n    //       }\r\n\r\n\r\n\r\n    //       this.backConfirmarPedido();\r\n    //     });\r\n\r\n    //   } else { // si no tiene error\r\n\r\n    //     // socket\r\n    //     // const res = resSocket[0];\r\n    //     // dataSend.dataPedido.idpedido = res.idpedido;\r\n    //     // dataSend.dataPrint = res.data[1] ? res.data[1]?.print : null;\r\n    //     // this.socketService.emit('nuevoPedido2', dataSend);\r\n\r\n    //     dataSend.dataPedido.idpedido = res.data[0].idpedido;\r\n    //     dataSend.dataPrint = res.data[0].data;\r\n    //     this.socketService.emit('nuevoPedido2', dataSend);\r\n\r\n    //     this.newFomrConfirma();\r\n    //     // this.backConfirmacion();\r\n\r\n    //     // hora del pedido\r\n    //     this.estadoPedidoClientService.setHoraInitPedido(new Date().getTime());\r\n\r\n    //     // this.miPedidoService.prepareNewPedido();\r\n\r\n\r\n    //     setTimeout(() => {\r\n    //       this.listenStatusService.setLoaderSendPedido(false);\r\n    //       this.miPedidoService.stopTimerLimit();\r\n    //       this.miPedidoService.prepareNewPedido();\r\n    //     }, 600);\r\n\r\n    //     //\r\n\r\n    //     // si es delivery y el pago es en efectivo o en yape, notificamos transaccion conforme\r\n    //     // if ( this.isDeliveryCliente && dataUsuario.metodoPago.idtipo_pago !== 2) {\r\n    //     // if ( this.isDeliveryCliente && _p_header.arrDatosDelivery.metodoPago.idtipo_pago !== 2) {\r\n    //     // if ( this.isDeliveryCliente && this.infoToken.infoUsToken.metodoPago.idtipo_pago !== 2) {\r\n    //     if ( this.isDeliveryCliente && !isPagoConTarjeta) {\r\n    //       this.infoToken.setOrderDelivery(JSON.stringify(dataSend), JSON.stringify(_subTotalesSave));\r\n    //       this.confirmarPedidoDeliveryEnviado();\r\n\r\n    //       // this.pagarCuentaDeliveryCliente();\r\n    //       // enviamos a pagar\r\n    //       return;\r\n    //     }\r\n\r\n    //     if ( this.isReservaCliente ) {\r\n    //       this.confirmarPedidoDeliveryEnviado();\r\n    //       return;\r\n    //     }\r\n\r\n    //     this.backConfirmarPedido();\r\n    //   }\r\n\r\n    //   // this.backConfirmarPedido()\r\n    // });\r\n\r\n      // hora del pedido\r\n      // this.estadoPedidoClientService.setHoraInitPedido(new Date().getTime());\r\n\r\n      //\r\n      // this.navigatorService.addLink('mipedido');\r\n      // this.isVisibleConfirmarAnimated = false;\r\n      // this.isRequiereMesa = false;\r\n      // this.isVisibleConfirmar = false;\r\n      //\r\n      // this.backConfirmacion();\r\n\r\n      // this.newFomrConfirma();\r\n\r\n      // this.miPedidoService.prepareNewPedido();\r\n\r\n      // // si es delivery y el pago es en efectivo o en yape, notificamos transaccion conforme\r\n      // if ( this.isDeliveryCliente && dataUsuario.metodoPago.idtipo_pago !== 2) {\r\n      //   this.pagarCuentaDeliveryCliente();\r\n      //   // enviamos a pagar\r\n      //   return;\r\n      // }\r\n\r\n      // this.miPedidoService.prepareNewPedido();\r\n\r\n      // this.backConfirmacion();\r\n\r\n      // // si es usuario cliente lo envia a estado\r\n      // if ( this.isCliente ) {\r\n      //   this.navigatorService.setPageActive('estado');\r\n      //   // this.estadoPedidoClientService.get(); // inicia calc tiempo aprox y cuenta total\r\n      // } else {\r\n      //   this.navigatorService.setPageActive('carta');\r\n      // }\r\n\r\n      this.isDeliveryValid = false; // formulario no valido para delivery\r\n\r\n\r\n\r\n  }\r\n\r\n  private backConfirmarPedido() {\r\n    this.backConfirmacion();\r\n\r\n    // si es usuario cliente lo envia a estado\r\n    if ( this.isCliente ) {\r\n      this.navigatorService.setPageActive('estado');\r\n      // this.estadoPedidoClientService.get(); // inicia calc tiempo aprox y cuenta total\r\n    } else {\r\n      this.navigatorService.setPageActive('carta');\r\n    }\r\n\r\n    this.isDeliveryValid = false; // formulario no valido para delivery\r\n  }\r\n\r\n  private checkTiposDeConsumo(): void {\r\n    // console.log('check tipo consumo');\r\n    this.arrReqFrm = <FormValidRptModel>this.miPedidoService.findEvaluateTPCMiPedido();\r\n    this.isRequiereMesa = this.arrReqFrm.isRequiereMesa;\r\n    this.frmConfirma.solo_llevar = this.arrReqFrm.isTpcSoloDelivery ? false : this.arrReqFrm.isTpcSoloLLevar;\r\n    this.frmConfirma.delivery = this.arrReqFrm.isTpcSoloDelivery;\r\n  }\r\n\r\n  checkIsRequierMesa(num: string = ''): void {\r\n    // console.log('check mesa', num);\r\n    if ( num !== '' ) {\r\n      num = num.replace(/\\D/gm, '');\r\n      this.frmConfirma.nummesa = num;\r\n\r\n\r\n      // revisar si el cliente ya hizo pedido en esta mesa\r\n      // this.getLatPedidoClienteThisITable(num);\r\n    }\r\n\r\n    this.frmConfirma.nummesa_resplado = num;\r\n    // const arrReqFrm = <FormValidRptModel>this.miPedidoService.findEvaluateTPCMiPedido();\r\n    // const isTPCLocal = arrReqFrm.isTpcLocal;\r\n    // this.isRequiereMesa = arrReqFrm.isRequiereMesa;\r\n    let numMesasSede = parseInt(this.miPedidoService.objDatosSede.datossede[0].mesas, 0);\r\n    numMesasSede = isNaN(numMesasSede) ? 0 : numMesasSede; // para asegurar si no viene este dato\r\n\r\n    let isMesaValid = this.frmConfirma.nummesa ? this.frmConfirma.nummesa !== '' ? true : false : false;\r\n    // valida la mesa que no sea mayor a las que hay\r\n    const numMesaIngresado = isMesaValid ? parseInt(this.frmConfirma.nummesa, 0) : 0;\r\n    isMesaValid = numMesaIngresado <= 0 || numMesaIngresado > numMesasSede ? false : true;\r\n    this.isRequiereMesa = this.arrReqFrm.isRequiereMesa;\r\n\r\n    // this.isRequiereMesa = isTPCLocal;\r\n    this.isRequiereMesa = this.isRequiereMesa && (!isMesaValid && !this.frmConfirma.reserva);\r\n\r\n  }\r\n\r\n  private checkIsDelivery() {\r\n    this.isDelivery = this.miPedidoService.findMiPedidoIsTPCDelivery();\r\n    // this.isDeliveryCliente = this.isDelivery;\r\n    // this.frmConfirma.delivery = this.isDelivery;\r\n  }\r\n\r\n  checkDataDelivery($event: any) {\r\n    this.isDeliveryValid = $event.formIsValid;\r\n    this.frmDelivery = $event.formData;\r\n  }\r\n\r\n  getLatPedidoClienteThisITable(num: string) {\r\n    const _data = {\r\n      idsede : this.infoToken.getInfoUs().idsede,\r\n      nummesa: num\r\n    };\r\n\r\n    this.crudService.postFree(_data, 'pedido', 'get-last-pedido-cliente-this-table', false)\r\n      .subscribe(res => {\r\n        console.log(res);\r\n      });\r\n  }\r\n\r\n  imprimirPrecuenta() {\r\n    this.loadPrinterPrecuenta = true;\r\n    const _getPrinterCaja = this.jsonPrintService.getPrinterPrecuenta();\r\n    if ( !_getPrinterCaja ) {return; }\r\n    const xArrayEncabezado = {\r\n            'm': this.numMesaCuenta,\r\n            'r': '',\r\n            'num_pedido': '',\r\n            'reservar': 0,\r\n            'solo_llevar': 0,\r\n            'correlativo_dia': '',\r\n            'precuenta': true,\r\n            'delivery': false,\r\n            'arrDatosDelivery': [],\r\n            'idregistro_pago': 0,\r\n            'nom_us': this.infoToken.infoUsToken.usuario\r\n          };\r\n\r\n    const _data = {\r\n      Array_enca: xArrayEncabezado,\r\n      Array_print: _getPrinterCaja.arrPrinters,\r\n      ArrayItem: _getPrinterCaja.arrBodyPrint,\r\n      ArraySubTotales: this._arrSubtotales\r\n    };\r\n\r\n    const dataSend = {\r\n      dataPrint: _data,\r\n      isprecuenta: 1\r\n    };\r\n\r\n\r\n    this.miPedidoService.printerPrecuenta(dataSend);\r\n    setTimeout(() => {\r\n      this.loadPrinterPrecuenta = false;\r\n\r\n    }, 2000);\r\n  }\r\n\r\n  // _resCuentaFromCliente desde la cuenta del cliente\r\n  xLoadCuentaMesa(mesa: string, _resCuentaFromCliente: any = null): void {\r\n    this.isHayCuentaBusqueda = false;\r\n    this.msjErr = false;\r\n    this.numMesaCuenta = mesa;\r\n    const datos = { mesa: mesa };\r\n\r\n\r\n    if ( _resCuentaFromCliente ) {\r\n      // cuando el usuario cliente realiza un nuevo pedido y se tiene que mostrar la cuenta\r\n      this.desglozarCuenta(_resCuentaFromCliente);\r\n      setTimeout(() => {\r\n        this.estadoPedidoClientService.setImporte(this._arrSubtotales[this._arrSubtotales.length - 1].importe);\r\n      }, 1000);\r\n      return;\r\n    }\r\n\r\n    this.crudService.postFree(datos, 'pedido', 'lacuenta').subscribe((res: any) => {\r\n      this.desglozarCuenta(res);\r\n    });\r\n  }\r\n\r\n\r\n  private desglozarCuenta(res: any): void {\r\n    const _miPedidoCuenta: PedidoModel = new PedidoModel();\r\n    const c_tiposConsumo: TipoConsumoModel[] = [];\r\n\r\n    // si se encontro cuenta\r\n    if (res.data.length === 0) {\r\n      this.isHayCuentaBusqueda = false;\r\n      this.msjErr = true;\r\n      this.listenStatusService.setHayCuentaBuesqueda(false);\r\n      return; }\r\n\r\n    this.isHayCuentaBusqueda = true;\r\n    this.listenStatusService.setHayCuentaBuesqueda(true);\r\n    // tipo consumo\r\n    res.data.map( (tp: any) => {\r\n      let hayTpc = c_tiposConsumo.filter(x => x.idtipo_consumo === tp.idtipo_consumo)[0];\r\n      if (!hayTpc) {\r\n        hayTpc = new TipoConsumoModel;\r\n        hayTpc.descripcion = tp.des_tp;\r\n        hayTpc.idtipo_consumo = parseInt(tp.idtipo_consumo, 0);\r\n        c_tiposConsumo.push(hayTpc);\r\n      }\r\n    });\r\n\r\n    // secciones\r\n\r\n\r\n    // const _listSec = res.data.reduce(function(rv, x) {\r\n    //     (rv[x['idseccion']] = rv[x['idseccion']] || []).push(x);\r\n    //     return rv;\r\n    //   }, {});\r\n\r\n\r\n    c_tiposConsumo.map((tp: TipoConsumoModel) => {\r\n      res.data\r\n        .filter((_tp: any) => _tp.idtipo_consumo === tp.idtipo_consumo)\r\n        .map((_s: any, i: number) => {\r\n          let haySeccion = tp.secciones.filter((s: SeccionModel) => s.idseccion.toString() === _s.idseccion.toString())[0];\r\n          if (!haySeccion) {\r\n            haySeccion = new SeccionModel;\r\n            haySeccion.idseccion = _s.idseccion.toString();\r\n            haySeccion.des = _s.des_seccion;\r\n            haySeccion.sec_orden = _s.sec_orden;\r\n            haySeccion.ver_stock_cero = 0;\r\n            tp.count_items_seccion = i + 1;\r\n            tp.secciones.push(haySeccion);\r\n          }\r\n        });\r\n    });\r\n\r\n    // items\r\n    c_tiposConsumo.map((tp: TipoConsumoModel) => {\r\n      tp.secciones.map((s: SeccionModel) => {\r\n        res.data\r\n        .filter((_tp: any) => _tp.idtipo_consumo.toString() === tp.idtipo_consumo.toString() && _tp.idseccion.toString() === s.idseccion.toString())\r\n        .map((_i: any, i: number) => {\r\n          const hayItem = new ItemModel;\r\n          hayItem.des = _i.descripcion;\r\n          hayItem.detalles = '';\r\n          hayItem.iditem = _i.iditem;\r\n          hayItem.idcarta_lista = _i.idcarta_lista;\r\n          hayItem.idseccion = _i.idseccion;\r\n          hayItem.isalmacen = _i.isalmacen;\r\n          hayItem.cantidad_seleccionada = parseInt(_i.cantidad, 0);\r\n          hayItem.precio = _i.punitario;\r\n          hayItem.precio_print = parseFloat(_i.ptotal);\r\n          hayItem.precio_total = parseFloat(_i.ptotal);\r\n          hayItem.procede = _i.procede === '0' ? 1 : 0;\r\n          hayItem.seccion = _i.des_seccion;\r\n          hayItem.subitems_view = _i.subitems === 'null' || _i.subitems === '' || !_i.subitems ? [] : JSON.parse(_i.subitems);\r\n          s.count_items = i + 1;\r\n          s.items.push(hayItem);\r\n        });\r\n      });\r\n    });\r\n\r\n\r\n\r\n    _miPedidoCuenta.tipoconsumo = c_tiposConsumo;\r\n    this.miPedidoService.setObjMiPedido(_miPedidoCuenta);\r\n    this._miPedido = this.miPedidoService.getMiPedido();\r\n\r\n    // para notificar antes del pago\r\n    // console.log(_miPedidoCuenta);\r\n    // console.log(this._miPedido);\r\n    this._arrSubtotales = this.miPedidoService.getArrSubTotales(this.rulesSubtoTales);\r\n    localStorage.setItem('sys::st', btoa(JSON.stringify(this._arrSubtotales)));\r\n\r\n  }\r\n\r\n\r\n  pagarCuentaDeliveryCliente() {\r\n    // this.navigatorService._router('./pagar-cuenta');\r\n    // if ( !localStorage.getItem('sys::st') ) {\r\n    //   this.verCuenta();\r\n    //   return;\r\n    // }\r\n\r\n    // this.estadoPedidoClientService.getCuenta(); // get subtotales - esta listen resumen-pedido;\r\n    this.router.navigate(['./pagar-cuenta'])\r\n    .then(() => {\r\n      if ( this.isBtnPagoShow ) {\r\n        window.location.reload();\r\n      }\r\n    });\r\n    // .then(() => {\r\n    //   if ( this.isBtnPagoShow ) {\r\n    //     window.location.reload();\r\n    //   }\r\n    // });\r\n\r\n    // this.listenStatusService.setIsPagePagarCuentaShow(true);\r\n  }\r\n\r\n\r\n  // pedido delivery pagado con efectivo o yape\r\n  private confirmarPedidoDeliveryEnviado() {\r\n    this.router.navigate(['./pedido-confirmado']);\r\n  }\r\n\r\n  private goBackOutEstablecimiento() {\r\n    const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.data = {idMjs: 2};\r\n\r\n        const dialogReset = this.dialog.open(DialogResetComponent, dialogConfig);\r\n        dialogReset.afterClosed().subscribe(result => {\r\n          if (result ) {\r\n            this.miPedidoService.resetAllNewPedido();\r\n            this.miPedidoService.cerrarSession();\r\n\r\n            this.isDeliveryValid = false; // formulario no valido para delivery\r\n            // this.socketService.closeConnection();\r\n            // this.navigatorService.cerrarSession();\r\n            this.infoToken.cerrarSession();\r\n          }\r\n        });\r\n\r\n  }\r\n\r\n  goBackCarta(): void {\r\n    this.navigatorService.setPageActive('carta');\r\n  }\r\n\r\n  private verificarConexionSocket() {\r\n    // console.log('this.socketService.isSocketOpen',  this.socketService.isSocketOpen);\r\n    if (!this.socketService.isSocketOpen) {\r\n        this.socketService.connect();\r\n    }\r\n  }\r\n\r\n  private savePedidoSocket(dataSend: any, isPagoConTarjeta: boolean, _subTotalesSave: any) {\r\n    // this.speechDataProviderService.setIsPedidoConfirmado();\r\n    // console.log('111111111111');\r\n\r\n\r\n    this.socketService.emitRes('nuevoPedido', JSON.stringify(dataSend)).subscribe(resSocket => {\r\n      // console.log('222222', resSocket);\r\n        if ( resSocket === false ) {\r\n          alert('!Ups a ocurrido un error, por favor verifique los datos y vuelve a intentarlo.');\r\n          // guardamos el error\r\n          const dataError = {\r\n            elerror: resSocket,\r\n            elorigen: 'resumen-pedido'\r\n          };\r\n\r\n          this.crudService.postFree(dataError, 'error', 'set-error', false)\r\n          .subscribe(resp => console.log(resp));\r\n\r\n          this.listenStatusService.setLoaderSendPedido(false, this.verifyClientService.getIsQrSuccess());\r\n          this.isSavingPedido = false;\r\n          return;\r\n        }\r\n\r\n        setTimeout(() => {\r\n          this.listenStatusService.setLoaderSendPedido(false, this.verifyClientService.getIsQrSuccess());\r\n          this.isSavingPedido = false;\r\n          this.miPedidoService.stopTimerLimit();\r\n          this.miPedidoService.prepareNewPedido();\r\n        }, 800);\r\n\r\n\r\n        const _res = resSocket[0];\r\n        dataSend.dataPedido.idpedido = _res.idpedido;\r\n        dataSend.dataPrint = _res.data[1] ? _res.data[1]?.print : null;\r\n\r\n        this.newFomrConfirma();\r\n\r\n        // hora del pedido\r\n        this.estadoPedidoClientService.setHoraInitPedido(new Date().getTime());\r\n\r\n        // si es delivery y el pago es en efectivo o en yape, notificamos transaccion conforme\r\n        if ( this.isDeliveryCliente && !isPagoConTarjeta) {\r\n          this.infoToken.setOrderDelivery(JSON.stringify(dataSend), JSON.stringify(_subTotalesSave));\r\n          this.confirmarPedidoDeliveryEnviado();\r\n\r\n          // this.pagarCuentaDeliveryCliente();\r\n          // enviamos a pagar\r\n          return;\r\n        }\r\n\r\n        if ( this.isReservaCliente ) {\r\n          this.confirmarPedidoDeliveryEnviado();\r\n          return;\r\n        }\r\n\r\n\r\n\r\n        this.backConfirmarPedido();\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","// este servicio arma el json, que se envia para imprmir // print_setver_detalle\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { SocketService } from './socket.service';\r\nimport { MipedidoService } from './mipedido.service';\r\nimport { TipoConsumoModel } from 'src/app/modelos/tipoconsumo.model';\r\nimport { SeccionModel } from 'src/app/modelos/seccion.model';\r\nimport { ItemModel } from 'src/app/modelos/item.model';\r\nimport { PedidoModel } from 'src/app/modelos/pedido.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JsonPrintService {\r\n  datosSede: any = [];\r\n\r\n  private impresoras: any = [];\r\n\r\n\r\n  constructor(\r\n    private socketService: SocketService,\r\n    private pedidoService: MipedidoService\r\n    ) {\r\n\r\n\r\n\r\n  }\r\n\r\n  // obtener los datos de la sede\r\n  private getDataSede(): void {\r\n    // this.socketService.onGetDatosSede().subscribe((res: any) => {\r\n      // this.datosSede = res[0];\r\n      this.datosSede = this.pedidoService.objDatosSede;\r\n      // console.log('datos de la sede', this.datosSede);\r\n    // });\r\n  }\r\n\r\n  // relacionar secciones con impresoras\r\n  private relationRowToPrint(iscliente: boolean = false): void {\r\n\r\n    // datos de la sede\r\n    this.getDataSede();\r\n\r\n\r\n    const _objMiPedido = this.pedidoService.getMiPedido();\r\n    const _tpcPrinter = this.pedidoService.getObjNewItemTiposConsumo();\r\n    const xRptPrint: any = []; // respuesta para enviar al backend\r\n    const listOnlyPrinters: any = []; // lista de solo impresoras\r\n    let xImpresoraPrint: any = []; // array de impresoras\r\n    let xArrayBodyPrint: any = []; // el array de secciones e items a imprimir\r\n    let printerAsigando: any = null;\r\n\r\n    this.impresoras = <any[]>this.datosSede.impresoras;\r\n    // valores de la primera impresora // impresora donde se pone el logo\r\n    const num_copias_all = this.datosSede.datossede[0].num_copias; // numero de copias para las demas impresoras -local\r\n    const var_size_font_tall_comanda = this.datosSede.datossede[0].var_size_font_tall_comanda; // tamañao de letras\r\n    const pie_pagina = this.datosSede.datossede[0].pie_pagina;\r\n    const pie_pagina_comprobante = this.datosSede.datossede[0].pie_pagina_comprobante;\r\n    const isPrintPedidoDeliveryCompleto = this.datosSede.datossede[0].isprint_all_delivery.toString() === '1';\r\n    let isHayDatosPrintObj = true; // si hay datos en el obj xArrayBodyPrint para imprimir\r\n    let isPedidoDelivery = false;\r\n    // let indexP = 0;\r\n\r\n    // si es cliente asigna impresora a seccion sin impresora // ej delivery por aplicacion\r\n    if ( iscliente ) {\r\n      this.setFirstPrinterSeccionCliente( _objMiPedido,  this.impresoras);\r\n    }\r\n\r\n    // 041052022\r\n    // si el tipo de consumo tiene un impresora especifica\r\n    // ej: todo delivery se imprime en una impresora x\r\n\r\n    let isTpcPrinter = false;\r\n    let listTPCPrinter = _tpcPrinter;\r\n    listTPCPrinter = listTPCPrinter.filter(p => p.idimpresora !== 0);\r\n    isTpcPrinter = listTPCPrinter.length > 0;\r\n    console.log('isTpcPrinter', isTpcPrinter);\r\n\r\n    if ( isTpcPrinter ) {\r\n      listTPCPrinter.map(p => {\r\n        const _tpcPrint = p.idtipo_consumo;\r\n        const xIdPrint = p.idimpresora;\r\n        xArrayBodyPrint = [];\r\n\r\n        _objMiPedido.tipoconsumo\r\n          .filter((tpc: TipoConsumoModel) => tpc.idtipo_consumo === _tpcPrint)\r\n          .map((tpc: TipoConsumoModel, indexP: number) => {\r\n            xArrayBodyPrint[indexP] = { 'des': tpc.descripcion, 'id': tpc.idtipo_consumo, 'titlo': tpc.titulo, 'conDatos': false};\r\n            tpc.secciones\r\n            // .filter((s: SeccionModel) => s.id === _tpcPrint)\r\n            .map((s: SeccionModel) => {\r\n              s.items.map((i: ItemModel) => {\r\n\r\n                  isHayDatosPrintObj = true;\r\n                  xArrayBodyPrint[indexP].conDatos = true; // si la seccion tiene items\r\n                  xArrayBodyPrint[indexP][i.iditem] = i;\r\n                  xArrayBodyPrint[indexP][i.iditem].des_seccion = s.des;\r\n                  xArrayBodyPrint[indexP][i.iditem].sec_orden = s.sec_orden;\r\n                  xArrayBodyPrint[indexP][i.iditem].cantidad = i.cantidad_seleccionada.toString().padStart(2, '0');\r\n                  xArrayBodyPrint[indexP][i.iditem].precio_print = parseFloat(i.precio_print.toString()).toFixed(2);\r\n                  if ( !i.subitems_view ) {\r\n                    xArrayBodyPrint[indexP][i.iditem].subitems_view = null;\r\n                  }\r\n\r\n                  i.flag_add_tpc = true;\r\n\r\n              });\r\n            });\r\n\r\n          });\r\n\r\n        if (xArrayBodyPrint.length === 0 || !isHayDatosPrintObj) { return; }\r\n\r\n        // buscamos la impresora en xArrayImpresoras;\r\n        printerAsigando = this.impresoras.filter(pp => pp.idimpresora === xIdPrint)[0];\r\n\r\n        xImpresoraPrint = [];\r\n        const childPrinter: any = {};\r\n        childPrinter.ip_print = printerAsigando.ip;\r\n        childPrinter.var_margen_iz = printerAsigando.var_margen_iz;\r\n        childPrinter.var_size_font = printerAsigando.var_size_font;\r\n        childPrinter.local = 0;\r\n        childPrinter.num_copias = printerAsigando.num_copias; // num_copias_all;\r\n        childPrinter.var_size_font_tall_comanda = var_size_font_tall_comanda;\r\n        childPrinter.copia_local = 0; // no imprime // solo para impresora local\r\n        childPrinter.img64 = '';\r\n        childPrinter.papel_size = printerAsigando.papel_size;\r\n        childPrinter.pie_pagina = pie_pagina;\r\n        childPrinter.pie_pagina_comprobante = pie_pagina_comprobante;\r\n\r\n        xImpresoraPrint.push(childPrinter);\r\n\r\n        xRptPrint.push({\r\n          arrBodyPrint: xArrayBodyPrint,\r\n          arrPrinters: xImpresoraPrint\r\n        });\r\n\r\n        listOnlyPrinters.push(childPrinter);\r\n      });\r\n    }\r\n\r\n\r\n\r\n    // si es punto auto pedido agregamos la impresora asignada\r\n    const _puntoConfig = JSON.parse(localStorage.getItem('sys::punto')) || {};\r\n    _puntoConfig.ispunto_autopedido = _puntoConfig ? _puntoConfig.ispunto_autopedido : false;\r\n\r\n    this.impresoras.map((p: any) => {\r\n      isHayDatosPrintObj = false;\r\n      xArrayBodyPrint = [];\r\n\r\n\r\n      _objMiPedido.tipoconsumo\r\n        .map((tpc: TipoConsumoModel, indexP: number) => {\r\n          xArrayBodyPrint[indexP] = { 'des': tpc.descripcion, 'id': tpc.idtipo_consumo, 'titlo': tpc.titulo, 'conDatos': false};\r\n          isPedidoDelivery = tpc.descripcion.toLowerCase() === 'delivery';\r\n\r\n          tpc.secciones\r\n            .filter((s: SeccionModel) => s.idimpresora === p.idimpresora)\r\n            .map((s: SeccionModel) => {\r\n              printerAsigando = p;\r\n\r\n              // imprime todo el pedido en todas las areas si es delivery\r\n              if (isPedidoDelivery && isPrintPedidoDeliveryCompleto) {\r\n                tpc.secciones.map((seccion: SeccionModel) => {\r\n                  seccion.items.map((i: ItemModel) => {\r\n\r\n                    if ( i.flag_add_tpc ) {return; }\r\n\r\n                    isHayDatosPrintObj = true;\r\n                    xArrayBodyPrint[indexP].conDatos = true; // si la seccion tiene items\r\n                    xArrayBodyPrint[indexP][i.iditem] = i;\r\n                    xArrayBodyPrint[indexP][i.iditem].des_seccion = seccion.des;\r\n                    xArrayBodyPrint[indexP][i.iditem].sec_orden = seccion.sec_orden;\r\n                    xArrayBodyPrint[indexP][i.iditem].cantidad = i.cantidad_seleccionada.toString().padStart(2, '0');\r\n                    xArrayBodyPrint[indexP][i.iditem].precio_print = parseFloat(i.precio_print.toString()).toFixed(2);\r\n                    if ( !i.subitems_view ) {\r\n                      xArrayBodyPrint[indexP][i.iditem].subitems_view = null;\r\n                    }\r\n                  });\r\n                });\r\n              }\r\n\r\n              s.items.map((i: ItemModel) => {\r\n                if ( i.flag_add_tpc ) {return; }\r\n                if (i.imprimir_comanda === 0 && !iscliente) { return; } // no imprimir // productos bodega u otros\r\n                  // xArrayBodyPrint[indexP][i.iditem] = [];\r\n                  isHayDatosPrintObj = true;\r\n                  xArrayBodyPrint[indexP].conDatos = true; // si la seccion tiene items\r\n                  xArrayBodyPrint[indexP][i.iditem] = i;\r\n                  xArrayBodyPrint[indexP][i.iditem].des_seccion = s.des;\r\n                  xArrayBodyPrint[indexP][i.iditem].sec_orden = s.sec_orden;\r\n                  xArrayBodyPrint[indexP][i.iditem].cantidad = i.cantidad_seleccionada.toString().padStart(2, '0');\r\n                  xArrayBodyPrint[indexP][i.iditem].precio_print = parseFloat(i.precio_print.toString()).toFixed(2);\r\n                  if ( !i.subitems_view ) {\r\n                    xArrayBodyPrint[indexP][i.iditem].subitems_view = null;\r\n                  }\r\n                });\r\n              });\r\n\r\n            // otra impresora en seccion\r\n            tpc.secciones\r\n            .filter((s: SeccionModel) => s.idimpresora_otro === p.idimpresora)\r\n            .map((s: SeccionModel) => {\r\n              printerAsigando = p;\r\n\r\n              // imprime todo el pedido en todas las areas si es delivery\r\n              if (isPedidoDelivery && isPrintPedidoDeliveryCompleto) {\r\n                tpc.secciones.map((seccion: SeccionModel) => {\r\n                  seccion.items.map((i: ItemModel) => {\r\n\r\n                    if ( i.flag_add_tpc ) {return; }\r\n\r\n                    isHayDatosPrintObj = true;\r\n                    xArrayBodyPrint[indexP].conDatos = true; // si la seccion tiene items\r\n                    xArrayBodyPrint[indexP][i.iditem] = i;\r\n                    xArrayBodyPrint[indexP][i.iditem].des_seccion = seccion.des;\r\n                    xArrayBodyPrint[indexP][i.iditem].sec_orden = seccion.sec_orden;\r\n                    xArrayBodyPrint[indexP][i.iditem].cantidad = i.cantidad_seleccionada.toString().padStart(2, '0');\r\n                    xArrayBodyPrint[indexP][i.iditem].precio_print = parseFloat(i.precio_print.toString()).toFixed(2);\r\n                    if ( !i.subitems_view ) {\r\n                      xArrayBodyPrint[indexP][i.iditem].subitems_view = null;\r\n                    }\r\n                  });\r\n                });\r\n              }\r\n\r\n              s.items.map((i: ItemModel) => {\r\n                if ( i.flag_add_tpc ) {return; }\r\n                if (i.imprimir_comanda === 0 && !iscliente) { return; } // no imprimir // productos bodega u otros\r\n                  // xArrayBodyPrint[indexP][i.iditem] = [];\r\n                  isHayDatosPrintObj = true;\r\n                  xArrayBodyPrint[indexP].conDatos = true; // si la seccion tiene items\r\n                  xArrayBodyPrint[indexP][i.iditem] = i;\r\n                  xArrayBodyPrint[indexP][i.iditem].des_seccion = s.des;\r\n                  xArrayBodyPrint[indexP][i.iditem].sec_orden = s.sec_orden;\r\n                  xArrayBodyPrint[indexP][i.iditem].cantidad = i.cantidad_seleccionada.toString().padStart(2, '0');\r\n                  xArrayBodyPrint[indexP][i.iditem].precio_print = parseFloat(i.precio_print.toString()).toFixed(2);\r\n                  if ( !i.subitems_view ) {\r\n                    xArrayBodyPrint[indexP][i.iditem].subitems_view = null;\r\n                  }\r\n                });\r\n              });\r\n              // indexP++;\r\n\r\n\r\n              // si es punto autopedido\r\n              if ( _puntoConfig.ispunto_autopedido ) {\r\n                _puntoConfig.impresora.ip_print = _puntoConfig.impresora.ip;\r\n\r\n                if ( p.idimpresora !== _puntoConfig.impresora.idimpresora ) { return; }\r\n\r\n                tpc.secciones\r\n                // .filter((s: SeccionModel) => s.idimpresora === p.idimpresora)\r\n                .map((s: SeccionModel) => {\r\n                  printerAsigando = _puntoConfig.impresora;\r\n\r\n                  s.items.map((i: ItemModel) => {\r\n                    if (i.imprimir_comanda === 0 && !iscliente) { return; } // no imprimir // productos bodega u otros\r\n                      // xArrayBodyPrint[indexP][i.iditem] = [];\r\n                      isHayDatosPrintObj = true;\r\n                      xArrayBodyPrint[indexP].conDatos = true; // si la seccion tiene items\r\n                      xArrayBodyPrint[indexP][i.iditem] = i;\r\n                      xArrayBodyPrint[indexP][i.iditem].des_seccion = s.des;\r\n                      xArrayBodyPrint[indexP][i.iditem].sec_orden = s.sec_orden;\r\n                      xArrayBodyPrint[indexP][i.iditem].cantidad = i.cantidad_seleccionada.toString().padStart(2, '0');\r\n                      xArrayBodyPrint[indexP][i.iditem].precio_print = parseFloat(i.precio_print.toString()).toFixed(2);\r\n                      if ( !i.subitems_view ) {\r\n                        xArrayBodyPrint[indexP][i.iditem].subitems_view = null;\r\n                      }\r\n                    });\r\n                  });\r\n              }\r\n\r\n          });\r\n\r\n\r\n      if (xArrayBodyPrint.length === 0 || !isHayDatosPrintObj) { return; }\r\n\r\n      xImpresoraPrint = [];\r\n      const childPrinter: any = {};\r\n      childPrinter.ip_print = printerAsigando.ip;\r\n      childPrinter.var_margen_iz = printerAsigando.var_margen_iz;\r\n      childPrinter.var_size_font = printerAsigando.var_size_font;\r\n      childPrinter.local = 0;\r\n      childPrinter.num_copias = printerAsigando.num_copias; // num_copias_all;\r\n      childPrinter.var_size_font_tall_comanda = var_size_font_tall_comanda;\r\n      childPrinter.copia_local = 0; // no imprime // solo para impresora local\r\n      childPrinter.img64 = '';\r\n      childPrinter.papel_size = printerAsigando.papel_size;\r\n      childPrinter.pie_pagina = pie_pagina;\r\n      childPrinter.pie_pagina_comprobante = pie_pagina_comprobante;\r\n\r\n      xImpresoraPrint.push(childPrinter);\r\n\r\n      // console.log('xArrayBodyPrint', xArrayBodyPrint);\r\n      // console.log('xImpresoraPrint', xImpresoraPrint);\r\n      xRptPrint.push({\r\n        arrBodyPrint: xArrayBodyPrint,\r\n        arrPrinters: xImpresoraPrint\r\n      });\r\n\r\n      listOnlyPrinters.push(childPrinter);\r\n    });\r\n\r\n\r\n    xRptPrint.listPrinters = listOnlyPrinters;\r\n\r\n    return xRptPrint;\r\n\r\n\r\n\r\n  }\r\n\r\n  // recuepra la primera impresora para imprimir cuando manda el cliente y si la seccion no tiene impresora\r\n  private GetFirstPrinter(listPrinter: any): any {\r\n    let firtsPrinter: any = null;\r\n    const countPrinters = listPrinter.length;\r\n    if ( countPrinters > 0 ) {\r\n        firtsPrinter = listPrinter[0];\r\n    }\r\n\r\n    if ( countPrinters > 1 && firtsPrinter.descripcion.toLowerCase() === 'caja' ) {\r\n      firtsPrinter = listPrinter[1];\r\n    }\r\n\r\n    return firtsPrinter;\r\n  }\r\n\r\n  // asigna impresora a las seccion que no tienen // para cuando el cliente realize el pedido imprima\r\n  private setFirstPrinterSeccionCliente(_objMiPedido: PedidoModel, listPrinter: any) {\r\n    let firtsIdPrinter: any = {};\r\n    _objMiPedido.tipoconsumo\r\n        .map((tpc: TipoConsumoModel) => {\r\n          firtsIdPrinter = tpc.secciones.filter((s: SeccionModel) => s.idimpresora !== 0)[0];\r\n          if ( firtsIdPrinter ) { return; }\r\n        });\r\n\r\n      // sino encontro ningun impresora asigna impresora de la lista de impresoras\r\n      if ( !firtsIdPrinter ) {\r\n        firtsIdPrinter = this.GetFirstPrinter(listPrinter);\r\n      }\r\n\r\n      if ( !firtsIdPrinter ) { return; }\r\n\r\n    // asignamos a las secciones que no tienen impresora\r\n    _objMiPedido.tipoconsumo\r\n        .map((tpc: TipoConsumoModel, indexP: number) => {\r\n          firtsIdPrinter = tpc.secciones.filter((s: SeccionModel) => s.idimpresora === 0)\r\n          .map((s: SeccionModel) => { s.idimpresora = firtsIdPrinter.idimpresora; });\r\n        });\r\n  }\r\n\r\n  getPrinterPrecuenta() {\r\n    let xRptPrint: any; // respuesta para enviar al backend\r\n    let xImpresoraPrint: any = []; // array de impresoras\r\n    let xArrayBodyPrint: any = []; // el array de secciones e items a imprimir\r\n\r\n    // datos de la sede\r\n    this.getDataSede();\r\n\r\n    // console.log('print precuenta');\r\n\r\n    xImpresoraPrint = [];\r\n    const var_size_font_tall_comanda = this.datosSede.datossede[0].var_size_font_tall_comanda; // tamañao de letras\r\n    const pie_pagina = this.datosSede.datossede[0].pie_pagina;\r\n    const pie_pagina_comprobante = this.datosSede.datossede[0].pie_pagina_comprobante;\r\n\r\n    // formato imprimir\r\n    const _objMiPedido = this.pedidoService.getMiPedido();\r\n    console.log('_objMiPedido', _objMiPedido);\r\n    xArrayBodyPrint = [];\r\n      _objMiPedido.tipoconsumo\r\n        .map((tpc: TipoConsumoModel, indexP: number) => {\r\n          xArrayBodyPrint[indexP] = { 'des': tpc.descripcion, 'id': tpc.idtipo_consumo, 'titlo': tpc.titulo, 'conDatos': false};\r\n          tpc.secciones\r\n            .map((s: SeccionModel) => {\r\n              s.items.map((i: ItemModel) => {\r\n                // if (i.imprimir_comanda === 0) { return; } // no imprimir // productos bodega u otros\r\n                  // xArrayBodyPrint[indexP][i.iditem] = [];\r\n                  xArrayBodyPrint[indexP].conDatos = true; // si la seccion tiene items\r\n                  // xArrayBodyPrint[indexP][i.iditem] = xArrayBodyPrint[indexP][i.iditem] ? xArrayBodyPrint[indexP][i.iditem] : i;\r\n                  // xArrayBodyPrint[indexP][i.iditem].des_seccion = s.des;\r\n                  // xArrayBodyPrint[indexP][i.iditem].cantidad = xArrayBodyPrint[indexP][i.iditem].cantidad ? xArrayBodyPrint[indexP][i.iditem].cantidad : 0;\r\n                  // xArrayBodyPrint[indexP][i.iditem].precio_print_app = xArrayBodyPrint[indexP][i.iditem].precio_print_app ? xArrayBodyPrint[indexP][i.iditem].precio_print_app : 0;\r\n                  // xArrayBodyPrint[indexP][i.iditem].cantidad += parseFloat(i.cantidad_seleccionada.toString()); // .toString().padStart(2, '0');\r\n                  // xArrayBodyPrint[indexP][i.iditem].precio_print_app += parseFloat(i.precio_print.toString());\r\n                  // xArrayBodyPrint[indexP][i.iditem].precio_print = parseFloat(xArrayBodyPrint[indexP][i.iditem].precio_print_app.toString()).toFixed(2);\r\n\r\n                  xArrayBodyPrint[indexP][i.iditem] = i;\r\n                  xArrayBodyPrint[indexP][i.iditem].des_seccion = s.des;\r\n                  xArrayBodyPrint[indexP][i.iditem].sec_orden = s.sec_orden;\r\n                  xArrayBodyPrint[indexP][i.iditem].cantidad = i.cantidad_seleccionada.toString().padStart(2, '0');\r\n                  xArrayBodyPrint[indexP][i.iditem].precio_print_app = parseFloat(i.precio_print.toString()).toFixed(2);\r\n                  xArrayBodyPrint[indexP][i.iditem].precio_print = parseFloat(i.precio_print.toString()).toFixed(2);\r\n\r\n                  if ( !i.subitems_view ) {\r\n                    xArrayBodyPrint[indexP][i.iditem].subitems_view = null;\r\n                  }\r\n                });\r\n              });\r\n              // indexP++;\r\n          });\r\n\r\n    this.impresoras = <any[]>this.datosSede.impresoras;\r\n    // -1 impresora precuenta\r\n    const p = this.impresoras.filter(x => x.idtipo_otro).filter(x => x.idtipo_otro.indexOf('-1') > -1)[0];\r\n    if ( !p ) {return false; }\r\n    const childPrinter: any = {};\r\n      childPrinter.ip_print = p.ip;\r\n      childPrinter.var_margen_iz = p.var_margen_iz;\r\n      childPrinter.var_size_font = p.var_size_font;\r\n      childPrinter.local = 0;\r\n      childPrinter.num_copias = 0;\r\n      childPrinter.var_size_font_tall_comanda = var_size_font_tall_comanda;\r\n      childPrinter.copia_local = 0; // no imprime // solo para impresora local\r\n      childPrinter.img64 = '';\r\n      childPrinter.papel_size = p.papel_size;\r\n      childPrinter.pie_pagina = pie_pagina;\r\n      childPrinter.pie_pagina_comprobante = pie_pagina_comprobante;\r\n    xImpresoraPrint.push(childPrinter);\r\n\r\n    // buscar impresora de precuenta\r\n\r\n    xRptPrint = {\r\n      arrBodyPrint: xArrayBodyPrint,\r\n      arrPrinters: xImpresoraPrint\r\n    };\r\n\r\n    return xRptPrint;\r\n  }\r\n\r\n  enviarMiPedido(iscliente: boolean = false): any {\r\n    return this.relationRowToPrint(iscliente);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { SocketService } from './socket.service';\nimport { StorageService } from './storage.service';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReglascartaService {\n  objReglasCarta: any;\n  private keyStorage = 'sys::rules';\n\n  constructor(\n    private storageService: StorageService,\n    private socketService: SocketService\n  ) { }\n\n  loadReglasCarta() {\n\n    // if ( this.storageService.isExistKey(this.keyStorage) ) {\n    //   return this.decodeObjInSotrage();\n    // } else {\n    //   return this.dataReglasCarta();\n    // }\n    return this.dataReglasCarta();\n  }\n\n  getObjReglasCarta(): any {\n    return this.objReglasCarta;\n  }\n\n  private dataReglasCarta() {\n    return new Observable(observer => {\n      this.socketService.onReglasCarta().subscribe((res: any) => {\n        this.objReglasCarta = res[0];\n        this.codeObjInSotrage();\n        // console.log(this.objReglasCarta);\n        observer.next(this.objReglasCarta);\n      });\n    });\n  }\n\n  private codeObjInSotrage(): void {\n    this.storageService.set(this.keyStorage, btoa(JSON.stringify(this.objReglasCarta)));\n  }\n\n  private decodeObjInSotrage() {\n    return new Observable(observer => {\n      const objFromStorage = this.storageService.get(this.keyStorage);\n      try {\n        this.objReglasCarta = JSON.parse(atob(objFromStorage));\n        // console.log(this.objReglasCarta);\n        observer.next(this.objReglasCarta);\n      } catch (error) {\n        this.dataReglasCarta();\n      }\n    });\n  }\n}\n"],"names":["Component","Router","ListenStatusService","EstadoPedidoClienteService","InfoTockenService","NavigatorLinkService","SocketService","Subject","takeUntil","EstablecimientoService","MatDialog","MatDialogConfig","DatosFacturacionClienteComponent","EstadoPedidoComponent","constructor","listenStatusService","estadoPedidoClienteService","infoTokenService","navigatorService","socketService","router","establecimientoService","dialogDatosFacturacion","ngOnInit","infoToken","getInfoUs","isDeliveryCliente","isDelivery","simbolo_moneda","getSimboloMoneda","isComercioAceptaTarjeta","get","pwa_delivery_acepta_tarjeta","listenStatus","ngOnDestroy","destroyEstado$","next","unsubscribe","resNavigatorSourceObserve$","pipe","subscribe","res","pageActive","tituloMesa","isSoloLLevar","setTimeout","getCuentaTotales","_importe","getImporteCuenta","estadoPedido","importe","hayPedidoPendiente$","setHayPedidoPendiente","estadoPedido$","isRegisterOnePago","setisRegisterPago","_router","timeRestanteAprox$","tiempoEspera","onPedidoPagado","isBtnPagoShow$","isBtnPagoShow","verCuenta","getCuenta","setPageActive","pagarCuenta","localStorage","getItem","navigate","then","window","location","reload","setIsPagePagarCuentaShow","solicitarAtencion","isViewMsjSolicitudPersoanl","console","log","emit","numMesaLector","showDatosFacturacion","dialogConfig","panelClass","open","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}